(()=>{var e={9669:(e,n,t)=>{e.exports=t(1609)},5448:(e,n,t)=>{"use strict";var r=t(4867),o=t(6026),i=t(4372),a=t(5327),s=t(4097),c=t(4109),u=t(7985),d=t(5061),l=t(5655),p=t(5263);e.exports=function(e){return new Promise((function(n,t){var f,h=e.data,A=e.headers,v=e.responseType;function b(){e.cancelToken&&e.cancelToken.unsubscribe(f),e.signal&&e.signal.removeEventListener("abort",f)}r.isFormData(h)&&delete A["Content-Type"];var g=new XMLHttpRequest;if(e.auth){var m=e.auth.username||"",x=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";A.Authorization="Basic "+btoa(m+":"+x)}var y=s(e.baseURL,e.url);function E(){if(g){var r="getAllResponseHeaders"in g?c(g.getAllResponseHeaders()):null,i={data:v&&"text"!==v&&"json"!==v?g.response:g.responseText,status:g.status,statusText:g.statusText,headers:r,config:e,request:g};o((function(e){n(e),b()}),(function(e){t(e),b()}),i),g=null}}if(g.open(e.method.toUpperCase(),a(y,e.params,e.paramsSerializer),!0),g.timeout=e.timeout,"onloadend"in g?g.onloadend=E:g.onreadystatechange=function(){g&&4===g.readyState&&(0!==g.status||g.responseURL&&0===g.responseURL.indexOf("file:"))&&setTimeout(E)},g.onabort=function(){g&&(t(d("Request aborted",e,"ECONNABORTED",g)),g=null)},g.onerror=function(){t(d("Network Error",e,null,g)),g=null},g.ontimeout=function(){var n=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded",r=e.transitional||l.transitional;e.timeoutErrorMessage&&(n=e.timeoutErrorMessage),t(d(n,e,r.clarifyTimeoutError?"ETIMEDOUT":"ECONNABORTED",g)),g=null},r.isStandardBrowserEnv()){var C=(e.withCredentials||u(y))&&e.xsrfCookieName?i.read(e.xsrfCookieName):void 0;C&&(A[e.xsrfHeaderName]=C)}"setRequestHeader"in g&&r.forEach(A,(function(e,n){void 0===h&&"content-type"===n.toLowerCase()?delete A[n]:g.setRequestHeader(n,e)})),r.isUndefined(e.withCredentials)||(g.withCredentials=!!e.withCredentials),v&&"json"!==v&&(g.responseType=e.responseType),"function"==typeof e.onDownloadProgress&&g.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&g.upload&&g.upload.addEventListener("progress",e.onUploadProgress),(e.cancelToken||e.signal)&&(f=function(e){g&&(t(!e||e&&e.type?new p("canceled"):e),g.abort(),g=null)},e.cancelToken&&e.cancelToken.subscribe(f),e.signal&&(e.signal.aborted?f():e.signal.addEventListener("abort",f))),h||(h=null),g.send(h)}))}},1609:(e,n,t)=>{"use strict";var r=t(4867),o=t(1849),i=t(321),a=t(7185),s=function e(n){var t=new i(n),s=o(i.prototype.request,t);return r.extend(s,i.prototype,t),r.extend(s,t),s.create=function(t){return e(a(n,t))},s}(t(5655));s.Axios=i,s.Cancel=t(5263),s.CancelToken=t(4972),s.isCancel=t(6502),s.VERSION=t(7288).version,s.all=function(e){return Promise.all(e)},s.spread=t(8713),s.isAxiosError=t(6268),e.exports=s,e.exports.default=s},5263:e=>{"use strict";function n(e){this.message=e}n.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},n.prototype.__CANCEL__=!0,e.exports=n},4972:(e,n,t)=>{"use strict";var r=t(5263);function o(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var n;this.promise=new Promise((function(e){n=e}));var t=this;this.promise.then((function(e){if(t._listeners){var n,r=t._listeners.length;for(n=0;n<r;n++)t._listeners[n](e);t._listeners=null}})),this.promise.then=function(e){var n,r=new Promise((function(e){t.subscribe(e),n=e})).then(e);return r.cancel=function(){t.unsubscribe(n)},r},e((function(e){t.reason||(t.reason=new r(e),n(t.reason))}))}o.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},o.prototype.subscribe=function(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]},o.prototype.unsubscribe=function(e){if(this._listeners){var n=this._listeners.indexOf(e);-1!==n&&this._listeners.splice(n,1)}},o.source=function(){var e;return{token:new o((function(n){e=n})),cancel:e}},e.exports=o},6502:e=>{"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},321:(e,n,t)=>{"use strict";var r=t(4867),o=t(5327),i=t(782),a=t(3572),s=t(7185),c=t(4875),u=c.validators;function d(e){this.defaults=e,this.interceptors={request:new i,response:new i}}d.prototype.request=function(e,n){if("string"==typeof e?(n=n||{}).url=e:n=e||{},!n.url)throw new Error("Provided config url is not valid");(n=s(this.defaults,n)).method?n.method=n.method.toLowerCase():this.defaults.method?n.method=this.defaults.method.toLowerCase():n.method="get";var t=n.transitional;void 0!==t&&c.assertOptions(t,{silentJSONParsing:u.transitional(u.boolean),forcedJSONParsing:u.transitional(u.boolean),clarifyTimeoutError:u.transitional(u.boolean)},!1);var r=[],o=!0;this.interceptors.request.forEach((function(e){"function"==typeof e.runWhen&&!1===e.runWhen(n)||(o=o&&e.synchronous,r.unshift(e.fulfilled,e.rejected))}));var i,d=[];if(this.interceptors.response.forEach((function(e){d.push(e.fulfilled,e.rejected)})),!o){var l=[a,void 0];for(Array.prototype.unshift.apply(l,r),l=l.concat(d),i=Promise.resolve(n);l.length;)i=i.then(l.shift(),l.shift());return i}for(var p=n;r.length;){var f=r.shift(),h=r.shift();try{p=f(p)}catch(e){h(e);break}}try{i=a(p)}catch(e){return Promise.reject(e)}for(;d.length;)i=i.then(d.shift(),d.shift());return i},d.prototype.getUri=function(e){if(!e.url)throw new Error("Provided config url is not valid");return e=s(this.defaults,e),o(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],(function(e){d.prototype[e]=function(n,t){return this.request(s(t||{},{method:e,url:n,data:(t||{}).data}))}})),r.forEach(["post","put","patch"],(function(e){d.prototype[e]=function(n,t,r){return this.request(s(r||{},{method:e,url:n,data:t}))}})),e.exports=d},782:(e,n,t)=>{"use strict";var r=t(4867);function o(){this.handlers=[]}o.prototype.use=function(e,n,t){return this.handlers.push({fulfilled:e,rejected:n,synchronous:!!t&&t.synchronous,runWhen:t?t.runWhen:null}),this.handlers.length-1},o.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},o.prototype.forEach=function(e){r.forEach(this.handlers,(function(n){null!==n&&e(n)}))},e.exports=o},4097:(e,n,t)=>{"use strict";var r=t(1793),o=t(7303);e.exports=function(e,n){return e&&!r(n)?o(e,n):n}},5061:(e,n,t)=>{"use strict";var r=t(481);e.exports=function(e,n,t,o,i){var a=new Error(e);return r(a,n,t,o,i)}},3572:(e,n,t)=>{"use strict";var r=t(4867),o=t(8527),i=t(6502),a=t(5655),s=t(5263);function c(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new s("canceled")}e.exports=function(e){return c(e),e.headers=e.headers||{},e.data=o.call(e,e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(n){delete e.headers[n]})),(e.adapter||a.adapter)(e).then((function(n){return c(e),n.data=o.call(e,n.data,n.headers,e.transformResponse),n}),(function(n){return i(n)||(c(e),n&&n.response&&(n.response.data=o.call(e,n.response.data,n.response.headers,e.transformResponse))),Promise.reject(n)}))}},481:e=>{"use strict";e.exports=function(e,n,t,r,o){return e.config=n,t&&(e.code=t),e.request=r,e.response=o,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}},e}},7185:(e,n,t)=>{"use strict";var r=t(4867);e.exports=function(e,n){n=n||{};var t={};function o(e,n){return r.isPlainObject(e)&&r.isPlainObject(n)?r.merge(e,n):r.isPlainObject(n)?r.merge({},n):r.isArray(n)?n.slice():n}function i(t){return r.isUndefined(n[t])?r.isUndefined(e[t])?void 0:o(void 0,e[t]):o(e[t],n[t])}function a(e){if(!r.isUndefined(n[e]))return o(void 0,n[e])}function s(t){return r.isUndefined(n[t])?r.isUndefined(e[t])?void 0:o(void 0,e[t]):o(void 0,n[t])}function c(t){return t in n?o(e[t],n[t]):t in e?o(void 0,e[t]):void 0}var u={url:a,method:a,data:a,baseURL:s,transformRequest:s,transformResponse:s,paramsSerializer:s,timeout:s,timeoutMessage:s,withCredentials:s,adapter:s,responseType:s,xsrfCookieName:s,xsrfHeaderName:s,onUploadProgress:s,onDownloadProgress:s,decompress:s,maxContentLength:s,maxBodyLength:s,transport:s,httpAgent:s,httpsAgent:s,cancelToken:s,socketPath:s,responseEncoding:s,validateStatus:c};return r.forEach(Object.keys(e).concat(Object.keys(n)),(function(e){var n=u[e]||i,o=n(e);r.isUndefined(o)&&n!==c||(t[e]=o)})),t}},6026:(e,n,t)=>{"use strict";var r=t(5061);e.exports=function(e,n,t){var o=t.config.validateStatus;t.status&&o&&!o(t.status)?n(r("Request failed with status code "+t.status,t.config,null,t.request,t)):e(t)}},8527:(e,n,t)=>{"use strict";var r=t(4867),o=t(5655);e.exports=function(e,n,t){var i=this||o;return r.forEach(t,(function(t){e=t.call(i,e,n)})),e}},5655:(e,n,t)=>{"use strict";var r=t(4867),o=t(6016),i=t(481),a={"Content-Type":"application/x-www-form-urlencoded"};function s(e,n){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=n)}var c,u={transitional:{silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(c=t(5448)),c),transformRequest:[function(e,n){return o(n,"Accept"),o(n,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e)?e:r.isArrayBufferView(e)?e.buffer:r.isURLSearchParams(e)?(s(n,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):r.isObject(e)||n&&"application/json"===n["Content-Type"]?(s(n,"application/json"),function(e,n,t){if(r.isString(e))try{return(0,JSON.parse)(e),r.trim(e)}catch(e){if("SyntaxError"!==e.name)throw e}return(0,JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){var n=this.transitional||u.transitional,t=n&&n.silentJSONParsing,o=n&&n.forcedJSONParsing,a=!t&&"json"===this.responseType;if(a||o&&r.isString(e)&&e.length)try{return JSON.parse(e)}catch(e){if(a){if("SyntaxError"===e.name)throw i(e,this,"E_JSON_PARSE");throw e}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};r.forEach(["delete","get","head"],(function(e){u.headers[e]={}})),r.forEach(["post","put","patch"],(function(e){u.headers[e]=r.merge(a)})),e.exports=u},7288:e=>{e.exports={version:"0.25.0"}},1849:e=>{"use strict";e.exports=function(e,n){return function(){for(var t=new Array(arguments.length),r=0;r<t.length;r++)t[r]=arguments[r];return e.apply(n,t)}}},5327:(e,n,t)=>{"use strict";var r=t(4867);function o(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,n,t){if(!n)return e;var i;if(t)i=t(n);else if(r.isURLSearchParams(n))i=n.toString();else{var a=[];r.forEach(n,(function(e,n){null!=e&&(r.isArray(e)?n+="[]":e=[e],r.forEach(e,(function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),a.push(o(n)+"="+o(e))})))})),i=a.join("&")}if(i){var s=e.indexOf("#");-1!==s&&(e=e.slice(0,s)),e+=(-1===e.indexOf("?")?"?":"&")+i}return e}},7303:e=>{"use strict";e.exports=function(e,n){return n?e.replace(/\/+$/,"")+"/"+n.replace(/^\/+/,""):e}},4372:(e,n,t)=>{"use strict";var r=t(4867);e.exports=r.isStandardBrowserEnv()?{write:function(e,n,t,o,i,a){var s=[];s.push(e+"="+encodeURIComponent(n)),r.isNumber(t)&&s.push("expires="+new Date(t).toGMTString()),r.isString(o)&&s.push("path="+o),r.isString(i)&&s.push("domain="+i),!0===a&&s.push("secure"),document.cookie=s.join("; ")},read:function(e){var n=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return n?decodeURIComponent(n[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},1793:e=>{"use strict";e.exports=function(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)}},6268:(e,n,t)=>{"use strict";var r=t(4867);e.exports=function(e){return r.isObject(e)&&!0===e.isAxiosError}},7985:(e,n,t)=>{"use strict";var r=t(4867);e.exports=r.isStandardBrowserEnv()?function(){var e,n=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");function o(e){var r=e;return n&&(t.setAttribute("href",r),r=t.href),t.setAttribute("href",r),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:"/"===t.pathname.charAt(0)?t.pathname:"/"+t.pathname}}return e=o(window.location.href),function(n){var t=r.isString(n)?o(n):n;return t.protocol===e.protocol&&t.host===e.host}}():function(){return!0}},6016:(e,n,t)=>{"use strict";var r=t(4867);e.exports=function(e,n){r.forEach(e,(function(t,r){r!==n&&r.toUpperCase()===n.toUpperCase()&&(e[n]=t,delete e[r])}))}},4109:(e,n,t)=>{"use strict";var r=t(4867),o=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var n,t,i,a={};return e?(r.forEach(e.split("\n"),(function(e){if(i=e.indexOf(":"),n=r.trim(e.substr(0,i)).toLowerCase(),t=r.trim(e.substr(i+1)),n){if(a[n]&&o.indexOf(n)>=0)return;a[n]="set-cookie"===n?(a[n]?a[n]:[]).concat([t]):a[n]?a[n]+", "+t:t}})),a):a}},8713:e=>{"use strict";e.exports=function(e){return function(n){return e.apply(null,n)}}},4875:(e,n,t)=>{"use strict";var r=t(7288).version,o={};["object","boolean","number","function","string","symbol"].forEach((function(e,n){o[e]=function(t){return typeof t===e||"a"+(n<1?"n ":" ")+e}}));var i={};o.transitional=function(e,n,t){function o(e,n){return"[Axios v"+r+"] Transitional option '"+e+"'"+n+(t?". "+t:"")}return function(t,r,a){if(!1===e)throw new Error(o(r," has been removed"+(n?" in "+n:"")));return n&&!i[r]&&(i[r]=!0,console.warn(o(r," has been deprecated since v"+n+" and will be removed in the near future"))),!e||e(t,r,a)}},e.exports={assertOptions:function(e,n,t){if("object"!=typeof e)throw new TypeError("options must be an object");for(var r=Object.keys(e),o=r.length;o-- >0;){var i=r[o],a=n[i];if(a){var s=e[i],c=void 0===s||a(s,i,e);if(!0!==c)throw new TypeError("option "+i+" must be "+c)}else if(!0!==t)throw Error("Unknown option "+i)}},validators:o}},4867:(e,n,t)=>{"use strict";var r=t(1849),o=Object.prototype.toString;function i(e){return Array.isArray(e)}function a(e){return void 0===e}function s(e){return"[object ArrayBuffer]"===o.call(e)}function c(e){return null!==e&&"object"==typeof e}function u(e){if("[object Object]"!==o.call(e))return!1;var n=Object.getPrototypeOf(e);return null===n||n===Object.prototype}function d(e){return"[object Function]"===o.call(e)}function l(e,n){if(null!=e)if("object"!=typeof e&&(e=[e]),i(e))for(var t=0,r=e.length;t<r;t++)n.call(null,e[t],t,e);else for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&n.call(null,e[o],o,e)}e.exports={isArray:i,isArrayBuffer:s,isBuffer:function(e){return null!==e&&!a(e)&&null!==e.constructor&&!a(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"[object FormData]"===o.call(e)},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&s(e.buffer)},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:c,isPlainObject:u,isUndefined:a,isDate:function(e){return"[object Date]"===o.call(e)},isFile:function(e){return"[object File]"===o.call(e)},isBlob:function(e){return"[object Blob]"===o.call(e)},isFunction:d,isStream:function(e){return c(e)&&d(e.pipe)},isURLSearchParams:function(e){return"[object URLSearchParams]"===o.call(e)},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:l,merge:function e(){var n={};function t(t,r){u(n[r])&&u(t)?n[r]=e(n[r],t):u(t)?n[r]=e({},t):i(t)?n[r]=t.slice():n[r]=t}for(var r=0,o=arguments.length;r<o;r++)l(arguments[r],t);return n},extend:function(e,n,t){return l(n,(function(n,o){e[o]=t&&"function"==typeof n?r(n,t):n})),e},trim:function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}}},1402:(e,n,t)=>{"use strict";t.d(n,{Z:()=>s});var r=t(7537),o=t.n(r),i=t(3645),a=t.n(i)()(o());a.push([e.id,"* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  /* width: 100vw;\r\n  height: 100vh; */\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  background-color: #000;\r\n  color: #fff;\r\n}\r\n\r\n.nav {\r\n  margin: 8px;\r\n}\r\n\r\n.btn {\r\n  height: 21px;\r\n  font-size: 0.6rem;\r\n  font-weight:bold;\r\n  text-transform: uppercase;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn:active {\r\n  opacity: 0.8;\r\n}\r\n\r\n.green-btn {\r\n  background: #e3f6b3;\r\n}\r\n\r\n.green-btn:hover {\r\n  box-shadow: 0 0 20px #e3f6b3, 0 0 20px #e3f6b3, 0 0 20px #e3f6b3, 0 0 20px #e3f6b3;\r\n}\r\n\r\n.blue-btn-no-hover {\r\n  background: #d3e3fb;\r\n}\r\n\r\n.blue-btn {\r\n  background: #d3e3fb;\r\n}\r\n\r\n.blue-btn:hover {\r\n  box-shadow: 0 0 20px #d3e3fb, 0 0 20px #d3e3fb, 0 0 20px #d3e3fb, 0 0 20px #d3e3fb;\r\n}\r\n\r\n.nav-btn {\r\n  width: 85px;\r\n}\r\n\r\n.garage-page {\r\n  display: block;\r\n  width: 100%;\r\n}\r\n\r\n.settings,\r\n.winners {\r\n  margin-top: 30px;\r\n}\r\n\r\n.create-car,\r\n.update-car,\r\n.btn-container {\r\n  margin: 8px;\r\n}\r\n\r\n.input-text {\r\n  background: #e2ebf9;\r\n}\r\n\r\n.input-color {\r\n  height: 21px;\r\n  border-radius: 7px;\r\n}\r\n\r\n.settings-btn {\r\n  width: 65px;\r\n}\r\n\r\n.race-btn,\r\n.reset-btn {\r\n  width: 80px;\r\n}\r\n\r\n.generate-btn {\r\n  width: 130px;\r\n}\r\n\r\n.garage {\r\n  margin-top: 50px;\r\n}\r\n\r\nh1, h2, h3 {\r\n  padding: 0;\r\n  margin: 0;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.car-container {\r\n  padding: 5px 0;\r\n}\r\n\r\n.car-title {\r\n  display: flex;\r\n  column-gap: 5px;\r\n}\r\n\r\n.car-main {\r\n  width: 100%;\r\n  height: 37px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  column-gap: 5px;\r\n  margin-top: 5px;\r\n}\r\n\r\n.car-brand {\r\n  margin-left: 15px;\r\n  color: #e6d371;\r\n}\r\n\r\n.car-brand-update {\r\n  text-shadow: 1px 1px 2px #fc0, 0 0 25px #fc0, 0 0 5px #fc0;\r\n}\r\n\r\n.btn-start,\r\n.btn-stop {\r\n  width: 25px;\r\n  height: 25px;\r\n  vertical-align: top;\r\n  border: 2px solid #49484a;\r\n  border-radius: 7px;\r\n  background: #000;\r\n  color: #49484a;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn-start-active {\r\n  color: #e3f6b3;\r\n  border: 2px solid #e3f6b3;\r\n}\r\n\r\n.btn-stop-active {\r\n  color: #f03210;\r\n  border: 2px solid #f03210;\r\n}\r\n\r\n.distance {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0 20px;\r\n}\r\n\r\n.car {\r\n  width: 90px;\r\n  height: 25px;\r\n  position: absolute;\r\n  bottom: 1px;\r\n  left: 0;\r\n  filter: drop-shadow(0 0 3px #d3e3fb);\r\n}\r\n\r\n.car-winner {\r\n  width: 45px;\r\n  height: 12px;\r\n  filter: drop-shadow(0 0 3px #d3e3fb);\r\n}\r\n\r\n.flag {\r\n  position: absolute;\r\n  right: 95px;\r\n  width: 40px;\r\n  height: 35px;\r\n}\r\n\r\nhr {\r\n  margin: 0;\r\n  border-color: white;\r\n  border-style: dashed;\r\n}\r\n\r\n.prev-and-next {\r\n  margin-top: 25px;\r\n}\r\n\r\n.prev-btn,\r\n.next-btn {\r\n  width: 80px;\r\n}\r\n\r\n.winners-page {\r\n  display: block;\r\n  /* width: 100%; */\r\n  margin: 8px;\r\n}\r\n\r\nth,\r\ntr {\r\n  padding: 10px;\r\n}\r\n\r\nth:first-child {\r\n  text-align: left;\r\n}","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;EACE,sBAAsB;AACxB;;AAEA;EACE;kBACgB;EAChB,WAAW;EACX,YAAY;EACZ,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,WAAW;AACb;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,YAAY;EACZ,iBAAiB;EACjB,gBAAgB;EAChB,yBAAyB;EACzB,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,kFAAkF;AACpF;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,kFAAkF;AACpF;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,cAAc;EACd,WAAW;AACb;;AAEA;;EAEE,gBAAgB;AAClB;;AAEA;;;EAGE,WAAW;AACb;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,WAAW;AACb;;AAEA;;EAEE,WAAW;AACb;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,UAAU;EACV,SAAS;EACT,oBAAoB;AACtB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,iBAAiB;EACjB,cAAc;AAChB;;AAEA;EACE,0DAA0D;AAC5D;;AAEA;;EAEE,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,yBAAyB;EACzB,kBAAkB;EAClB,gBAAgB;EAChB,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,cAAc;EACd,yBAAyB;AAC3B;;AAEA;EACE,cAAc;EACd,yBAAyB;AAC3B;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,WAAW;EACX,OAAO;EACP,oCAAoC;AACtC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,oCAAoC;AACtC;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,WAAW;EACX,YAAY;AACd;;AAEA;EACE,SAAS;EACT,mBAAmB;EACnB,oBAAoB;AACtB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;EAEE,WAAW;AACb;;AAEA;EACE,cAAc;EACd,iBAAiB;EACjB,WAAW;AACb;;AAEA;;EAEE,aAAa;AACf;;AAEA;EACE,gBAAgB;AAClB",sourcesContent:["* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  /* width: 100vw;\r\n  height: 100vh; */\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  background-color: #000;\r\n  color: #fff;\r\n}\r\n\r\n.nav {\r\n  margin: 8px;\r\n}\r\n\r\n.btn {\r\n  height: 21px;\r\n  font-size: 0.6rem;\r\n  font-weight:bold;\r\n  text-transform: uppercase;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn:active {\r\n  opacity: 0.8;\r\n}\r\n\r\n.green-btn {\r\n  background: #e3f6b3;\r\n}\r\n\r\n.green-btn:hover {\r\n  box-shadow: 0 0 20px #e3f6b3, 0 0 20px #e3f6b3, 0 0 20px #e3f6b3, 0 0 20px #e3f6b3;\r\n}\r\n\r\n.blue-btn-no-hover {\r\n  background: #d3e3fb;\r\n}\r\n\r\n.blue-btn {\r\n  background: #d3e3fb;\r\n}\r\n\r\n.blue-btn:hover {\r\n  box-shadow: 0 0 20px #d3e3fb, 0 0 20px #d3e3fb, 0 0 20px #d3e3fb, 0 0 20px #d3e3fb;\r\n}\r\n\r\n.nav-btn {\r\n  width: 85px;\r\n}\r\n\r\n.garage-page {\r\n  display: block;\r\n  width: 100%;\r\n}\r\n\r\n.settings,\r\n.winners {\r\n  margin-top: 30px;\r\n}\r\n\r\n.create-car,\r\n.update-car,\r\n.btn-container {\r\n  margin: 8px;\r\n}\r\n\r\n.input-text {\r\n  background: #e2ebf9;\r\n}\r\n\r\n.input-color {\r\n  height: 21px;\r\n  border-radius: 7px;\r\n}\r\n\r\n.settings-btn {\r\n  width: 65px;\r\n}\r\n\r\n.race-btn,\r\n.reset-btn {\r\n  width: 80px;\r\n}\r\n\r\n.generate-btn {\r\n  width: 130px;\r\n}\r\n\r\n.garage {\r\n  margin-top: 50px;\r\n}\r\n\r\nh1, h2, h3 {\r\n  padding: 0;\r\n  margin: 0;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.car-container {\r\n  padding: 5px 0;\r\n}\r\n\r\n.car-title {\r\n  display: flex;\r\n  column-gap: 5px;\r\n}\r\n\r\n.car-main {\r\n  width: 100%;\r\n  height: 37px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  column-gap: 5px;\r\n  margin-top: 5px;\r\n}\r\n\r\n.car-brand {\r\n  margin-left: 15px;\r\n  color: #e6d371;\r\n}\r\n\r\n.car-brand-update {\r\n  text-shadow: 1px 1px 2px #fc0, 0 0 25px #fc0, 0 0 5px #fc0;\r\n}\r\n\r\n.btn-start,\r\n.btn-stop {\r\n  width: 25px;\r\n  height: 25px;\r\n  vertical-align: top;\r\n  border: 2px solid #49484a;\r\n  border-radius: 7px;\r\n  background: #000;\r\n  color: #49484a;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn-start-active {\r\n  color: #e3f6b3;\r\n  border: 2px solid #e3f6b3;\r\n}\r\n\r\n.btn-stop-active {\r\n  color: #f03210;\r\n  border: 2px solid #f03210;\r\n}\r\n\r\n.distance {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0 20px;\r\n}\r\n\r\n.car {\r\n  width: 90px;\r\n  height: 25px;\r\n  position: absolute;\r\n  bottom: 1px;\r\n  left: 0;\r\n  filter: drop-shadow(0 0 3px #d3e3fb);\r\n}\r\n\r\n.car-winner {\r\n  width: 45px;\r\n  height: 12px;\r\n  filter: drop-shadow(0 0 3px #d3e3fb);\r\n}\r\n\r\n.flag {\r\n  position: absolute;\r\n  right: 95px;\r\n  width: 40px;\r\n  height: 35px;\r\n}\r\n\r\nhr {\r\n  margin: 0;\r\n  border-color: white;\r\n  border-style: dashed;\r\n}\r\n\r\n.prev-and-next {\r\n  margin-top: 25px;\r\n}\r\n\r\n.prev-btn,\r\n.next-btn {\r\n  width: 80px;\r\n}\r\n\r\n.winners-page {\r\n  display: block;\r\n  /* width: 100%; */\r\n  margin: 8px;\r\n}\r\n\r\nth,\r\ntr {\r\n  padding: 10px;\r\n}\r\n\r\nth:first-child {\r\n  text-align: left;\r\n}"],sourceRoot:""}]);const s=a},3645:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var u=0;u<e.length;u++){var d=[].concat(e[u]);r&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},7537:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},6962:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>b});var r=t(3379),o=t.n(r),i=t(7795),a=t.n(i),s=t(569),c=t.n(s),u=t(3565),d=t.n(u),l=t(9216),p=t.n(l),f=t(4589),h=t.n(f),A=t(1402),v={};v.styleTagTransform=h(),v.setAttributes=d(),v.insert=c().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=p(),o()(A.Z,v);const b=A.Z&&A.Z.locals?A.Z.locals:void 0},3379:e=>{"use strict";var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var i={},a=[],s=0;s<e.length;s++){var c=e[s],u=r.base?c[0]+r.base:c[0],d=i[u]||0,l="".concat(u," ").concat(d);i[u]=d+1;var p=t(l),f={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(f);else{var h=o(f,r);r.byIndex=s,n.splice(s,0,{identifier:l,updater:h,references:1})}a.push(l)}return a}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var s=t(i[a]);n[s].references--}for(var c=r(e,o),u=0;u<i.length;u++){var d=t(i[u]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}i=c}}},569:e=>{"use strict";var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},9216:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},3565:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},7795:e=>{"use strict";e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},4589:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},7043:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.brandsCars=void 0,n.brandsCars=["Audi","Alfa Romeo","Alpina","Aston Martin","Axon","Ford","Ferrari","Fiat","GAZ","GMC","Honda","Hummer","Hyundai","Infiniti","Isuzu","JAC","Jaguar","Jeep","Kamaz","Lada","Lexus","Lotus","MAN","Maybach","MAZ","Mazda","McLaren","Nissan","Opel","Paccar","Pagani","Pontiac","Porsche","Renault","Škoda","Smart","Subaru","Suzuki","Tesla","Toyota","UAZ","Volvo","ZAZ","XPeng","TVR","Saab","RAM","Chevrolet","Mazzanti","Daewoo"]},5653:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=class{constructor(e){this.container=document.createElement("div"),this.container.id=e,this.container.className=e}createPage(e){this.container.innerHTML=e}render(){return this.container}}},4087:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.startCar=void 0,n.startCar=()=>{window.addEventListener("click",(e=>{const n=e.target;if(n.className.includes("btn-start")){const e=new RegExp(/\d/gm),t=n.id.match(e).join(""),r=document.querySelector(`#car-${t}`),o=document.querySelector(`#btn-start-${t}`),i=document.querySelector(`#btn-stop-${t}`);console.log(o),o.classList.remove("btn-start-active"),i.classList.add("btn-stop-active");let a=Date.now();function s(e,n){e.style.left=n/5+"px"}let c=setInterval((function(){let e=Date.now()-a;e>=6e3?clearInterval(c):s(r,e)}),20)}}))}},4289:function(e,n,t){"use strict";var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,s)}c((r=r.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.callApi=void 0;const o=t(9669);n.callApi=(e,n,t)=>r(void 0,void 0,void 0,(function*(){return yield(0,o.default)({method:e,url:`http://localhost:3000${n}`,data:t,headers:{"Content-Type":"application/json"}})}))},5341:function(e,n,t){"use strict";var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,s)}c((r=r.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.addCar=n.createCar=void 0;const o=t(4289),i=t(8423),a=(e,n)=>r(void 0,void 0,void 0,(function*(){try{const t="POST",r="/garage",i={name:e,color:n};return yield(0,o.callApi)(t,r,i)}catch(e){console.log(e)}}));n.createCar=a,n.addCar=()=>r(void 0,void 0,void 0,(function*(){window.addEventListener("click",(e=>r(void 0,void 0,void 0,(function*(){if(e.target.className.includes("input-create-text")){const e=document.querySelector(".input-create-color"),n=document.querySelector(".input-create-text"),t=document.querySelector(".next-btn"),o=document.querySelector(".garage-title").textContent.match(new RegExp(/\d*/gm)).join(""),s=document.querySelector(".garage-page-title").textContent.match(new RegExp(/# \d*/gm)).join("").slice(2);document.querySelector(".create-btn").addEventListener("click",(()=>r(void 0,void 0,void 0,(function*(){yield a(n.value,e.value),(0,i.renderPage)(s),n.value="",o%7==0&&(t.removeAttribute("disabled"),t.classList.add("blue-btn"))}))))}}))))}))},1119:function(e,n,t){"use strict";var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,s)}c((r=r.apply(e,n||[])).next())}))},o=this&&this.__asyncValues||function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,t=e[Symbol.asyncIterator];return t?t.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),n={},r("next"),r("throw"),r("return"),n[Symbol.asyncIterator]=function(){return this},n);function r(t){n[t]=e[t]&&function(n){return new Promise((function(r,o){!function(e,n,t,r){Promise.resolve(r).then((function(n){e({value:n,done:t})}),n)}(r,o,(n=e[t](n)).done,n.value)}))}}};Object.defineProperty(n,"__esModule",{value:!0}),n.addRandomCar=void 0;const i=t(5341),a=t(8621),s=t(7043),c=t(8423);n.addRandomCar=()=>r(void 0,void 0,void 0,(function*(){window.addEventListener("click",(e=>{var n,t;return r(void 0,void 0,void 0,(function*(){if(e.target.className.includes("generate-btn")){const e=document.querySelector(".next-btn"),d=document.querySelector(".garage-page-title").textContent.match(new RegExp(/# \d*/gm)).join("").slice(2),l=(()=>{const e=Array(100).fill().map((()=>{return e=s.brandsCars,n=a.modelsCars,`${e[Math.floor(Math.random()*e.length)]}-${n[Math.floor(Math.random()*n.length)]}`;var e,n})),n=Array(100).fill().map((()=>"#"+(Math.random().toString(16)+"000000").substring(2,8)));return e.map(((e,t)=>[e,n[t]]))})();try{for(var r,u=o(l);!(r=yield u.next()).done;){const e=r.value;(0,i.createCar)(e[0],e[1])}}catch(e){n={error:e}}finally{try{r&&!r.done&&(t=u.return)&&(yield t.call(u))}finally{if(n)throw n.error}}(0,c.renderPage)(d),e.removeAttribute("disabled"),e.classList.add("blue-btn")}}))}))}))},6298:function(e,n,t){"use strict";var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,s)}c((r=r.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.delCar=void 0;const o=t(4289),i=t(8423),a=e=>r(void 0,void 0,void 0,(function*(){try{const n="DELETE",t=`/garage/${e}`;return(yield(0,o.callApi)(n,t)).data}catch(e){console.log(e)}}));n.delCar=()=>r(void 0,void 0,void 0,(function*(){window.addEventListener("click",(e=>r(void 0,void 0,void 0,(function*(){const n=e.target;if(n.className.includes("remove-btn")){const e=document.querySelector(".next-btn"),t=document.querySelector(".garage-title").textContent.match(new RegExp(/\d*/gm)).join(""),r=document.querySelector(".garage-page-title").textContent,o=r.match(new RegExp(/# \d*/gm)).join("").slice(2),s=r.match(new RegExp(/\d*$/gm)).join(""),c=new RegExp(/\d/gm),u=n.id.match(c).join("");(+t-1)%7==0&&+s==+o?(yield a(u),(0,i.renderPage)(+o-1)):(yield a(u),(0,i.renderPage)(o)),+t-1==7&&(e.classList.remove("blue-btn"),e.setAttribute("disabled",""))}}))))}))},3392:function(e,n,t){"use strict";var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,s)}c((r=r.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.getCar=void 0;const o=t(4289);n.getCar=e=>r(void 0,void 0,void 0,(function*(){try{const n="GET",t=`/garage/${e}`;return(yield(0,o.callApi)(n,t)).data}catch(e){console.log(e)}}))},9477:function(e,n,t){"use strict";var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,s)}c((r=r.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.returnCarContent=void 0;const o=t(4289),i=t(362);n.returnCarContent=e=>r(void 0,void 0,void 0,(function*(){const n=yield((e,n=7)=>r(void 0,void 0,void 0,(function*(){try{const t="GET",r=`/garage?_page=${e}&_limit=${n}`,i=yield(0,o.callApi)(t,r);return[i.data,+i.headers["x-total-count"]]}catch(e){return console.log(e),[null,0]}})))(e);return null===n[0]?["",n[1],e]:[(yield(t=n[0],r(void 0,void 0,void 0,(function*(){return null===t?[""]:t.map((e=>(0,i.createCarContent)(`${e.id}`,`${e.color}`,`${e.name}`)))})))).join("\n"),n[1],e];var t}))},7224:function(e,n,t){"use strict";var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,s)}c((r=r.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.returnWinnerContent=void 0;const o=t(4289),i=t(9658),a=t(3392);n.returnWinnerContent=()=>r(void 0,void 0,void 0,(function*(){const e=yield(1,7,r(void 0,void 0,void 0,(function*(){try{const e="GET",n="/winners?_page=1&_limit=7",t=yield(0,o.callApi)(e,n);return[t.data,+t.headers["x-total-count"]]}catch(e){return console.log(e),[null,0]}})));var n;return[(yield(n=e[0],r(void 0,void 0,void 0,(function*(){if(null===n)return[""];const e=yield n.map((e=>e.id));yield Promise.all(e);const t=yield e.map((e=>(0,a.getCar)(e))),r=yield Promise.all(t);return n.map(((e,n)=>(0,i.winnerRow)(`${e.id}`,`${e.time}`,`${e.wins}`,`${r[n].color}`,`${r[n].name}`,`${n+1}`)))})))).join("\n"),e[1]]}))},2437:function(e,n,t){"use strict";var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,s)}c((r=r.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.prevList=n.nextList=void 0;const o=t(8423);let i=1;n.nextList=()=>r(void 0,void 0,void 0,(function*(){const e=document.querySelector(".next-btn"),n=document.querySelector(".prev-btn"),t=document.querySelector(".garage-title").textContent.match(new RegExp(/\d*/gm)).join(""),a=document.querySelector(".garage-page-title").textContent,s=a.match(new RegExp(/\d*$/gm)).join(""),c=a.match(new RegExp(/# \d*/gm)).join("").slice(2);i=+c,+t/7>+i?(e.removeAttribute("disabled"),e.classList.add("blue-btn")):(e.setAttribute("disabled",""),e.classList.remove("blue-btn")),e.addEventListener("click",(()=>r(void 0,void 0,void 0,(function*(){n.removeAttribute("disabled"),n.classList.add("blue-btn"),i+=1,yield(0,o.renderPage)(i),i===+s&&(e.classList.remove("blue-btn"),e.setAttribute("disabled",""))}))))})),n.prevList=()=>r(void 0,void 0,void 0,(function*(){const e=document.querySelector(".next-btn"),n=document.querySelector(".prev-btn"),t=document.querySelector(".garage-page-title").textContent.match(new RegExp(/# \d*/gm)).join("").slice(2);i=+t,n.addEventListener("click",(()=>r(void 0,void 0,void 0,(function*(){i-=1,yield(0,o.renderPage)(i),i>=1&&(e.classList.add("blue-btn"),e.removeAttribute("disabled","")),1===i&&(n.classList.remove("blue-btn"),n.setAttribute("disabled",""))}))))}))},8423:function(e,n,t){"use strict";var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,s)}c((r=r.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.renderPage=void 0;const o=t(9477),i=t(6928);n.renderPage=e=>r(void 0,void 0,void 0,(function*(){yield(0,o.returnCarContent)(e).then((e=>{var n;n=(0,i.garageContent)(e[0],e[1],e[2]),r(void 0,void 0,void 0,(function*(){document.querySelector(".pages").innerHTML=n}))}))}))},746:function(e,n,t){"use strict";var r=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,s)}c((r=r.apply(e,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.updCar=void 0;const o=t(4289),i=t(8423);n.updCar=()=>r(void 0,void 0,void 0,(function*(){window.addEventListener("click",(e=>r(void 0,void 0,void 0,(function*(){const n=document.querySelector(".input-update-color"),t=document.querySelector(".input-update-text"),a=document.querySelector(".update-btn"),s=e.target;if(s.className.includes("select-btn")){const e=document.querySelector(".garage-page-title").textContent.match(new RegExp(/# \d*/gm)).join("").slice(2),c=new RegExp(/\d/gm),u=s.id.match(c).join(""),d=document.querySelector(`#car-brand-${u}`);t.removeAttribute("disabled"),n.removeAttribute("disabled"),a.removeAttribute("disabled"),a.classList.add("blue-btn"),d.classList.add("car-brand-update"),a.addEventListener("click",(()=>r(void 0,void 0,void 0,(function*(){var s,c,l;yield(s=u,c=t.value,l=n.value,r(void 0,void 0,void 0,(function*(){try{const e="PUT",n=`/garage/${s}`,t={name:c,color:l};return(yield(0,o.callApi)(e,n,t)).data}catch(e){console.log(e)}}))),n.setAttribute("disabled",""),a.setAttribute("disabled",""),t.setAttribute("disabled",""),a.classList.remove("blue-btn"),d.classList.remove("car-brand-update"),(0,i.renderPage)(e)}))))}}))))}))},186:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(7356),o=t(2443);class i{static renderNewPage(e){i.container.innerHTML="";let n=null;if("garage-page"===e?n=new r.default(e):"winners-page"===e&&(n=new o.default(e)),n){const e=n.render();i.container.append(e)}}enableRouteChange(){window.addEventListener("hashchange",(()=>{const e=window.location.hash.slice(1);i.renderNewPage(e)}))}run(){i.renderNewPage("garage-page"),this.enableRouteChange()}}i.container=document.querySelector(".pages"),n.default=i},362:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.createCarContent=void 0,n.createCarContent=(e,n,t)=>`\n          <div class="car-container">\n            <div class="car-title">\n              <button id="select-btn-${e}" class="btn settings-btn blue-btn select-btn">Select</button>\n              <button id="remove-btn-${e}" class="btn settings-btn blue-btn remove-btn">Remove</button>\n              <div id="car-brand-${e}" class="car-brand">${t}</div>\n            </div>\n    \n            <div id="car-main-${e}" class="car-main">\n              <button id="btn-start-${e}" class="btn-start btn-start-active">A</button>\n              <button id="btn-stop-${e}" class="btn-stop">B</button>\n              <div class="distance">\n                <svg id="car-${e}" class="car" version="1.0" xmlns="http://www.w3.org/2000/svg" width="90.000000pt" height="25.000000pt" viewBox="0 0 1280.000000 365.000000" preserveAspectRatio="xMidYMid meet"><g transform="translate(0.000000,365.000000) scale(0.100000,-0.100000)" fill="${n}"><path d="M4860 3643 c-239 -18 -575 -71 -841 -133 -270 -62 -441 -114 -712 -216 -489 -184 -907 -313 -1152 -354 -66 -11 -271 -38 -455 -60 -476 -58 -675 -85 -919 -126 -506 -84 -796 -193 -779 -294 2 -11 101 -136 220 -278 l216 -259 -45 -44 c-131 -127 -234 -299 -275 -461 -22 -86 -22 -88 -5 -188 42 -252 156 -412 379 -534 106 -59 201 -87 308 -93 116 -6 168 6 221 54 48 43 69 107 69 207 0 307 60 636 159 877 190 459 541 758 982 835 136 23 358 15 495 -20 529 -132 929 -564 1074 -1158 51 -209 64 -327 63 -590 l0 -238 2624 0 c1442 0 2623 2 2623 5 0 2 -9 27 -20 56 -32 80 -87 284 -106 394 -24 139 -25 391 0 503 96 447 409 761 880 882 504 129 1049 3 1394 -323 336 -318 441 -780 303 -1326 l-27 -106 25 -21 c102 -83 243 -84 408 0 242 121 500 412 711 801 96 177 128 253 115 274 -14 23 -185 173 -265 233 -61 46 -67 53 -61 79 8 44 -40 134 -112 205 -106 107 -366 221 -694 304 -450 115 -954 165 -1661 165 -568 -1 -912 -24 -1309 -89 l-142 -23 -70 43 c-302 187 -707 389 -1079 539 -670 271 -1275 428 -1835 475 -109 9 -597 11 -705 3z m815 -233 c495 -36 862 -139 1323 -372 410 -208 670 -382 897 -601 l90 -86 -1240 0 c-1339 -1 -1312 -2 -1428 52 -75 35 -166 107 -227 181 -51 60 -63 86 -202 448 -81 210 -148 384 -148 386 0 7 817 0 935 -8z m-1249 -45 c29 -19 157 -276 204 -410 51 -148 100 -345 100 -407 0 -46 -5 -62 -24 -85 -23 -27 -28 -28 -113 -27 -64 0 -105 6 -149 22 -68 24 -695 396 -752 446 -61 53 -92 104 -92 150 0 131 165 219 565 302 167 35 219 37 261 9z"/><path fill="#dfdec9" d="M2276 2230 c-290 -46 -553 -203 -727 -433 -74 -98 -160 -271 -189 -382 -137 -525 103 -1061 585 -1302 176 -89 323 -118 547 -110 122 4 172 11 247 31 597 166 947 774 790 1374 -82 313 -297 572 -594 718 -157 77 -272 105 -455 109 -80 2 -172 0 -204 -5z m293 -615 c92 -24 163 -65 234 -136 186 -186 206 -461 48 -669 -85 -111 -203 -180 -345 -201 -247 -37 -501 141 -561 392 -42 179 6 343 139 474 111 110 211 153 356 154 41 1 99 -6 129 -14z"/><path fill="#dfdec9" d="M10175 2234 c-149 -22 -309 -76 -425 -144 -625 -365 -747 -1221 -249 -1745 131 -138 285 -235 467 -294 129 -43 230 -55 401 -48 175 6 284 33 436 106 321 154 546 451 616 811 19 98 16 319 -5 420 -92 435 -410 765 -840 871 -79 20 -328 34 -401 23z m270 -619 c88 -23 153 -62 230 -140 82 -81 120 -152 143 -266 50 -243 -102 -497 -348 -580 -83 -28 -210 -30 -295 -5 -232 68 -391 296 -372 531 12 136 65 244 166 337 102 95 205 136 341 137 42 1 102 -6 135 -14z"/></g></svg>\n                <img class="flag" src="./assets/flag.svg" alt="">\n              </div>\n            </div>\n            <hr>\n          </div>`},6928:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.garageContent=void 0;const r=t(7043).brandsCars.map((e=>`<option value="${e}">\n  `)).join("");n.garageContent=(e="",n="0",t=1)=>{let o=Math.ceil(+n/7);return`\n    <div class="settings">\n      <div class="create-car">\n        <input class="input-text input-create-text" type="text" list="create-models" placeholder="Choose a model">\n        <datalist id="create-models">\n          ${r}\n        </datalist>\n        <input class="input-color input-create-color" type="color">\n        <button class="btn settings-btn blue-btn create-btn">Create</button>\n      </div>\n      <div class="update-car">\n        <input class="input-text input-update-text" type="text" list="update-models" disabled>\n        <datalist id="update-models">\n          ${r}\n        </datalist>\n        <input class="input-color input-update-color" type="color" disabled>\n        <button class="btn settings-btn blue-btn-no-hover update-btn" disabled>Update</button>\n      </div>\n      <div class="btn-container">\n        <button class="btn race-btn green-btn">Race</button>\n        <button class="btn reset-btn green-btn">Reset</button>\n        <button class="btn generate-btn blue-btn">Generate Cars</button>\n      </div>\n    </div>\n    <div class="garage">\n      <h1 class="garage-title">Garage ( <span>${n}</span> )</h1>\n      <h3 class="garage-page-title">Page # <span>${t} of ${o}</span></h3>\n      <div class="cars-container">\n        ${e}\n      </div>\n    </div>`}},7356:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(5653),o=t(6928),i=t(9477),a=t(5341),s=t(6298),c=t(746),u=t(1119),d=t(2437),l=t(4087);class p extends r.default{constructor(e){super(e)}render(){return this.createPage((0,o.garageContent)()),(0,i.returnCarContent)(1).then((e=>{this.createPage((0,o.garageContent)(e[0],e[1],e[2]))})).then((()=>{(0,a.addCar)(),(0,s.delCar)(),(0,c.updCar)(),(0,u.addRandomCar)(),(0,d.nextList)(),(0,d.prevList)(),(0,l.startCar)()})),this.container}}n.default=p},9658:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.winnerRow=void 0,n.winnerRow=(e,n,t,r,o,i)=>`\n  <tr id="tr-${e}">\n   <th>${i}</th>\n   <th>\n     <div>\n       <svg id="car-winner-${e}" class="car-winner" version="1.0" xmlns="http://www.w3.org/2000/svg" width="45.000000pt" height="10.000000pt" viewBox="0 0 1280.000000 365.000000" preserveAspectRatio="xMidYMid meet"><g transform="translate(0.000000,365.000000) scale(0.100000,-0.100000)" fill="${r}"><path d="M4860 3643 c-239 -18 -575 -71 -841 -133 -270 -62 -441 -114 -712 -216 -489 -184 -907 -313 -1152 -354 -66 -11 -271 -38 -455 -60 -476 -58 -675 -85 -919 -126 -506 -84 -796 -193 -779 -294 2 -11 101 -136 220 -278 l216 -259 -45 -44 c-131 -127 -234 -299 -275 -461 -22 -86 -22 -88 -5 -188 42 -252 156 -412 379 -534 106 -59 201 -87 308 -93 116 -6 168 6 221 54 48 43 69 107 69 207 0 307 60 636 159 877 190 459 541 758 982 835 136 23 358 15 495 -20 529 -132 929 -564 1074 -1158 51 -209 64 -327 63 -590 l0 -238 2624 0 c1442 0 2623 2 2623 5 0 2 -9 27 -20 56 -32 80 -87 284 -106 394 -24 139 -25 391 0 503 96 447 409 761 880 882 504 129 1049 3 1394 -323 336 -318 441 -780 303 -1326 l-27 -106 25 -21 c102 -83 243 -84 408 0 242 121 500 412 711 801 96 177 128 253 115 274 -14 23 -185 173 -265 233 -61 46 -67 53 -61 79 8 44 -40 134 -112 205 -106 107 -366 221 -694 304 -450 115 -954 165 -1661 165 -568 -1 -912 -24 -1309 -89 l-142 -23 -70 43 c-302 187 -707 389 -1079 539 -670 271 -1275 428 -1835 475 -109 9 -597 11 -705 3z m815 -233 c495 -36 862 -139 1323 -372 410 -208 670 -382 897 -601 l90 -86 -1240 0 c-1339 -1 -1312 -2 -1428 52 -75 35 -166 107 -227 181 -51 60 -63 86 -202 448 -81 210 -148 384 -148 386 0 7 817 0 935 -8z m-1249 -45 c29 -19 157 -276 204 -410 51 -148 100 -345 100 -407 0 -46 -5 -62 -24 -85 -23 -27 -28 -28 -113 -27 -64 0 -105 6 -149 22 -68 24 -695 396 -752 446 -61 53 -92 104 -92 150 0 131 165 219 565 302 167 35 219 37 261 9z"/><path fill="#dfdec9" d="M2276 2230 c-290 -46 -553 -203 -727 -433 -74 -98 -160 -271 -189 -382 -137 -525 103 -1061 585 -1302 176 -89 323 -118 547 -110 122 4 172 11 247 31 597 166 947 774 790 1374 -82 313 -297 572 -594 718 -157 77 -272 105 -455 109 -80 2 -172 0 -204 -5z m293 -615 c92 -24 163 -65 234 -136 186 -186 206 -461 48 -669 -85 -111 -203 -180 -345 -201 -247 -37 -501 141 -561 392 -42 179 6 343 139 474 111 110 211 153 356 154 41 1 99 -6 129 -14z"/><path fill="#dfdec9" d="M10175 2234 c-149 -22 -309 -76 -425 -144 -625 -365 -747 -1221 -249 -1745 131 -138 285 -235 467 -294 129 -43 230 -55 401 -48 175 6 284 33 436 106 321 154 546 451 616 811 19 98 16 319 -5 420 -92 435 -410 765 -840 871 -79 20 -328 34 -401 23z m270 -619 c88 -23 153 -62 230 -140 82 -81 120 -152 143 -266 50 -243 -102 -497 -348 -580 -83 -28 -210 -30 -295 -5 -232 68 -391 296 -372 531 12 136 65 244 166 337 102 95 205 136 341 137 42 1 102 -6 135 -14z"/></g></svg>\n     </div>\n   </th>\n   <th>${o}</th>\n   <th>${t}</th>\n   <th>${n}</th>\n </tr>`},5954:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.winnersContent=void 0,n.winnersContent=(e="",n="0")=>`\n  <div class="winners">\n    <h1 class="winners-title">Winners ( <span>${n}</span> )</h1>\n    <h3 class="winners-page-title">Page # <span>${"0"===n?0:1} of ${Math.ceil(+n/7)}</span></h3>\n  </div>\n\n  <div class="winners-container">\n    <table>\n      <thead>\n        <tr>\n          <th>Number</th>\n          <th>Car</th>\n          <th>Name</th>\n          <th>Wins</th>\n          <th>Best time (second)</th>\n        </tr>\n       </thead>\n       <tbody>\n        ${e}\n       </tbody>\n    </table>\n  </div>`},2443:(e,n,t)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0});const r=t(5653),o=t(5954),i=t(7224);class a extends r.default{constructor(e){super(e)}render(){return this.createPage((0,o.winnersContent)()),(0,i.returnWinnerContent)().then((e=>{this.createPage((0,o.winnersContent)(e[0],e[1]))})),this.container}}n.default=a},8621:(e,n)=>{"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.modelsCars=void 0,n.modelsCars=["Roadster","S","X","3","Y","Cybertruck","X5","X7","X3","X6","GT4","FXX","599 GTO","Enzo","458 Italia","250 GTO","Priora","4x4","Rio","Focus","Kalina","Vesta","Spark","Lacetti","Nexia","Matiz","Cobalt","Captiva","A7","A5","A3","A8","TT","Corolla","Camry","RAV4","Impreza","WRX","ES","LS","RX","GX","LX","GS","LC500","Gallardo","Aventador","911","Cayenne","FX37"]}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var i=n[r]={id:r,exports:{}};return e[r].call(i.exports,i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";t(6962),t(4289),t(8423),t(9477),t(3392),t(5341),t(1119),t(6298),t(746),t(7224),t(4087),(new(t(186).default)).run()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,