(()=>{var e={9669:(e,t,n)=>{e.exports=n(1609)},5448:(e,t,n)=>{"use strict";var r=n(4867),o=n(6026),i=n(4372),a=n(5327),s=n(4097),c=n(4109),u=n(7985),d=n(5061),l=n(5655),p=n(5263);e.exports=function(e){return new Promise((function(t,n){var f,h=e.data,A=e.headers,v=e.responseType;function b(){e.cancelToken&&e.cancelToken.unsubscribe(f),e.signal&&e.signal.removeEventListener("abort",f)}r.isFormData(h)&&delete A["Content-Type"];var g=new XMLHttpRequest;if(e.auth){var m=e.auth.username||"",y=e.auth.password?unescape(encodeURIComponent(e.auth.password)):"";A.Authorization="Basic "+btoa(m+":"+y)}var x=s(e.baseURL,e.url);function w(){if(g){var r="getAllResponseHeaders"in g?c(g.getAllResponseHeaders()):null,i={data:v&&"text"!==v&&"json"!==v?g.response:g.responseText,status:g.status,statusText:g.statusText,headers:r,config:e,request:g};o((function(e){t(e),b()}),(function(e){n(e),b()}),i),g=null}}if(g.open(e.method.toUpperCase(),a(x,e.params,e.paramsSerializer),!0),g.timeout=e.timeout,"onloadend"in g?g.onloadend=w:g.onreadystatechange=function(){g&&4===g.readyState&&(0!==g.status||g.responseURL&&0===g.responseURL.indexOf("file:"))&&setTimeout(w)},g.onabort=function(){g&&(n(d("Request aborted",e,"ECONNABORTED",g)),g=null)},g.onerror=function(){n(d("Network Error",e,null,g)),g=null},g.ontimeout=function(){var t=e.timeout?"timeout of "+e.timeout+"ms exceeded":"timeout exceeded",r=e.transitional||l.transitional;e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),n(d(t,e,r.clarifyTimeoutError?"ETIMEDOUT":"ECONNABORTED",g)),g=null},r.isStandardBrowserEnv()){var E=(e.withCredentials||u(x))&&e.xsrfCookieName?i.read(e.xsrfCookieName):void 0;E&&(A[e.xsrfHeaderName]=E)}"setRequestHeader"in g&&r.forEach(A,(function(e,t){void 0===h&&"content-type"===t.toLowerCase()?delete A[t]:g.setRequestHeader(t,e)})),r.isUndefined(e.withCredentials)||(g.withCredentials=!!e.withCredentials),v&&"json"!==v&&(g.responseType=e.responseType),"function"==typeof e.onDownloadProgress&&g.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&g.upload&&g.upload.addEventListener("progress",e.onUploadProgress),(e.cancelToken||e.signal)&&(f=function(e){g&&(n(!e||e&&e.type?new p("canceled"):e),g.abort(),g=null)},e.cancelToken&&e.cancelToken.subscribe(f),e.signal&&(e.signal.aborted?f():e.signal.addEventListener("abort",f))),h||(h=null),g.send(h)}))}},1609:(e,t,n)=>{"use strict";var r=n(4867),o=n(1849),i=n(321),a=n(7185),s=function e(t){var n=new i(t),s=o(i.prototype.request,n);return r.extend(s,i.prototype,n),r.extend(s,n),s.create=function(n){return e(a(t,n))},s}(n(5655));s.Axios=i,s.Cancel=n(5263),s.CancelToken=n(4972),s.isCancel=n(6502),s.VERSION=n(7288).version,s.all=function(e){return Promise.all(e)},s.spread=n(8713),s.isAxiosError=n(6268),e.exports=s,e.exports.default=s},5263:e=>{"use strict";function t(e){this.message=e}t.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},t.prototype.__CANCEL__=!0,e.exports=t},4972:(e,t,n)=>{"use strict";var r=n(5263);function o(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var n=this;this.promise.then((function(e){if(n._listeners){var t,r=n._listeners.length;for(t=0;t<r;t++)n._listeners[t](e);n._listeners=null}})),this.promise.then=function(e){var t,r=new Promise((function(e){n.subscribe(e),t=e})).then(e);return r.cancel=function(){n.unsubscribe(t)},r},e((function(e){n.reason||(n.reason=new r(e),t(n.reason))}))}o.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},o.prototype.subscribe=function(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]},o.prototype.unsubscribe=function(e){if(this._listeners){var t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}},o.source=function(){var e;return{token:new o((function(t){e=t})),cancel:e}},e.exports=o},6502:e=>{"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},321:(e,t,n)=>{"use strict";var r=n(4867),o=n(5327),i=n(782),a=n(3572),s=n(7185),c=n(4875),u=c.validators;function d(e){this.defaults=e,this.interceptors={request:new i,response:new i}}d.prototype.request=function(e,t){if("string"==typeof e?(t=t||{}).url=e:t=e||{},!t.url)throw new Error("Provided config url is not valid");(t=s(this.defaults,t)).method?t.method=t.method.toLowerCase():this.defaults.method?t.method=this.defaults.method.toLowerCase():t.method="get";var n=t.transitional;void 0!==n&&c.assertOptions(n,{silentJSONParsing:u.transitional(u.boolean),forcedJSONParsing:u.transitional(u.boolean),clarifyTimeoutError:u.transitional(u.boolean)},!1);var r=[],o=!0;this.interceptors.request.forEach((function(e){"function"==typeof e.runWhen&&!1===e.runWhen(t)||(o=o&&e.synchronous,r.unshift(e.fulfilled,e.rejected))}));var i,d=[];if(this.interceptors.response.forEach((function(e){d.push(e.fulfilled,e.rejected)})),!o){var l=[a,void 0];for(Array.prototype.unshift.apply(l,r),l=l.concat(d),i=Promise.resolve(t);l.length;)i=i.then(l.shift(),l.shift());return i}for(var p=t;r.length;){var f=r.shift(),h=r.shift();try{p=f(p)}catch(e){h(e);break}}try{i=a(p)}catch(e){return Promise.reject(e)}for(;d.length;)i=i.then(d.shift(),d.shift());return i},d.prototype.getUri=function(e){if(!e.url)throw new Error("Provided config url is not valid");return e=s(this.defaults,e),o(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},r.forEach(["delete","get","head","options"],(function(e){d.prototype[e]=function(t,n){return this.request(s(n||{},{method:e,url:t,data:(n||{}).data}))}})),r.forEach(["post","put","patch"],(function(e){d.prototype[e]=function(t,n,r){return this.request(s(r||{},{method:e,url:t,data:n}))}})),e.exports=d},782:(e,t,n)=>{"use strict";var r=n(4867);function o(){this.handlers=[]}o.prototype.use=function(e,t,n){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!n&&n.synchronous,runWhen:n?n.runWhen:null}),this.handlers.length-1},o.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},o.prototype.forEach=function(e){r.forEach(this.handlers,(function(t){null!==t&&e(t)}))},e.exports=o},4097:(e,t,n)=>{"use strict";var r=n(1793),o=n(7303);e.exports=function(e,t){return e&&!r(t)?o(e,t):t}},5061:(e,t,n)=>{"use strict";var r=n(481);e.exports=function(e,t,n,o,i){var a=new Error(e);return r(a,t,n,o,i)}},3572:(e,t,n)=>{"use strict";var r=n(4867),o=n(8527),i=n(6502),a=n(5655),s=n(5263);function c(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new s("canceled")}e.exports=function(e){return c(e),e.headers=e.headers||{},e.data=o.call(e,e.data,e.headers,e.transformRequest),e.headers=r.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),r.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||a.adapter)(e).then((function(t){return c(e),t.data=o.call(e,t.data,t.headers,e.transformResponse),t}),(function(t){return i(t)||(c(e),t&&t.response&&(t.response.data=o.call(e,t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))}},481:e=>{"use strict";e.exports=function(e,t,n,r,o){return e.config=t,n&&(e.code=n),e.request=r,e.response=o,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}},e}},7185:(e,t,n)=>{"use strict";var r=n(4867);e.exports=function(e,t){t=t||{};var n={};function o(e,t){return r.isPlainObject(e)&&r.isPlainObject(t)?r.merge(e,t):r.isPlainObject(t)?r.merge({},t):r.isArray(t)?t.slice():t}function i(n){return r.isUndefined(t[n])?r.isUndefined(e[n])?void 0:o(void 0,e[n]):o(e[n],t[n])}function a(e){if(!r.isUndefined(t[e]))return o(void 0,t[e])}function s(n){return r.isUndefined(t[n])?r.isUndefined(e[n])?void 0:o(void 0,e[n]):o(void 0,t[n])}function c(n){return n in t?o(e[n],t[n]):n in e?o(void 0,e[n]):void 0}var u={url:a,method:a,data:a,baseURL:s,transformRequest:s,transformResponse:s,paramsSerializer:s,timeout:s,timeoutMessage:s,withCredentials:s,adapter:s,responseType:s,xsrfCookieName:s,xsrfHeaderName:s,onUploadProgress:s,onDownloadProgress:s,decompress:s,maxContentLength:s,maxBodyLength:s,transport:s,httpAgent:s,httpsAgent:s,cancelToken:s,socketPath:s,responseEncoding:s,validateStatus:c};return r.forEach(Object.keys(e).concat(Object.keys(t)),(function(e){var t=u[e]||i,o=t(e);r.isUndefined(o)&&t!==c||(n[e]=o)})),n}},6026:(e,t,n)=>{"use strict";var r=n(5061);e.exports=function(e,t,n){var o=n.config.validateStatus;n.status&&o&&!o(n.status)?t(r("Request failed with status code "+n.status,n.config,null,n.request,n)):e(n)}},8527:(e,t,n)=>{"use strict";var r=n(4867),o=n(5655);e.exports=function(e,t,n){var i=this||o;return r.forEach(n,(function(n){e=n.call(i,e,t)})),e}},5655:(e,t,n)=>{"use strict";var r=n(4867),o=n(6016),i=n(481),a={"Content-Type":"application/x-www-form-urlencoded"};function s(e,t){!r.isUndefined(e)&&r.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var c,u={transitional:{silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(c=n(5448)),c),transformRequest:[function(e,t){return o(t,"Accept"),o(t,"Content-Type"),r.isFormData(e)||r.isArrayBuffer(e)||r.isBuffer(e)||r.isStream(e)||r.isFile(e)||r.isBlob(e)?e:r.isArrayBufferView(e)?e.buffer:r.isURLSearchParams(e)?(s(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):r.isObject(e)||t&&"application/json"===t["Content-Type"]?(s(t,"application/json"),function(e,t,n){if(r.isString(e))try{return(0,JSON.parse)(e),r.trim(e)}catch(e){if("SyntaxError"!==e.name)throw e}return(0,JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){var t=this.transitional||u.transitional,n=t&&t.silentJSONParsing,o=t&&t.forcedJSONParsing,a=!n&&"json"===this.responseType;if(a||o&&r.isString(e)&&e.length)try{return JSON.parse(e)}catch(e){if(a){if("SyntaxError"===e.name)throw i(e,this,"E_JSON_PARSE");throw e}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};r.forEach(["delete","get","head"],(function(e){u.headers[e]={}})),r.forEach(["post","put","patch"],(function(e){u.headers[e]=r.merge(a)})),e.exports=u},7288:e=>{e.exports={version:"0.25.0"}},1849:e=>{"use strict";e.exports=function(e,t){return function(){for(var n=new Array(arguments.length),r=0;r<n.length;r++)n[r]=arguments[r];return e.apply(t,n)}}},5327:(e,t,n)=>{"use strict";var r=n(4867);function o(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,n){if(!t)return e;var i;if(n)i=n(t);else if(r.isURLSearchParams(t))i=t.toString();else{var a=[];r.forEach(t,(function(e,t){null!=e&&(r.isArray(e)?t+="[]":e=[e],r.forEach(e,(function(e){r.isDate(e)?e=e.toISOString():r.isObject(e)&&(e=JSON.stringify(e)),a.push(o(t)+"="+o(e))})))})),i=a.join("&")}if(i){var s=e.indexOf("#");-1!==s&&(e=e.slice(0,s)),e+=(-1===e.indexOf("?")?"?":"&")+i}return e}},7303:e=>{"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},4372:(e,t,n)=>{"use strict";var r=n(4867);e.exports=r.isStandardBrowserEnv()?{write:function(e,t,n,o,i,a){var s=[];s.push(e+"="+encodeURIComponent(t)),r.isNumber(n)&&s.push("expires="+new Date(n).toGMTString()),r.isString(o)&&s.push("path="+o),r.isString(i)&&s.push("domain="+i),!0===a&&s.push("secure"),document.cookie=s.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},1793:e=>{"use strict";e.exports=function(e){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e)}},6268:(e,t,n)=>{"use strict";var r=n(4867);e.exports=function(e){return r.isObject(e)&&!0===e.isAxiosError}},7985:(e,t,n)=>{"use strict";var r=n(4867);e.exports=r.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),n=document.createElement("a");function o(e){var r=e;return t&&(n.setAttribute("href",r),r=n.href),n.setAttribute("href",r),{href:n.href,protocol:n.protocol?n.protocol.replace(/:$/,""):"",host:n.host,search:n.search?n.search.replace(/^\?/,""):"",hash:n.hash?n.hash.replace(/^#/,""):"",hostname:n.hostname,port:n.port,pathname:"/"===n.pathname.charAt(0)?n.pathname:"/"+n.pathname}}return e=o(window.location.href),function(t){var n=r.isString(t)?o(t):t;return n.protocol===e.protocol&&n.host===e.host}}():function(){return!0}},6016:(e,t,n)=>{"use strict";var r=n(4867);e.exports=function(e,t){r.forEach(e,(function(n,r){r!==t&&r.toUpperCase()===t.toUpperCase()&&(e[t]=n,delete e[r])}))}},4109:(e,t,n)=>{"use strict";var r=n(4867),o=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,n,i,a={};return e?(r.forEach(e.split("\n"),(function(e){if(i=e.indexOf(":"),t=r.trim(e.substr(0,i)).toLowerCase(),n=r.trim(e.substr(i+1)),t){if(a[t]&&o.indexOf(t)>=0)return;a[t]="set-cookie"===t?(a[t]?a[t]:[]).concat([n]):a[t]?a[t]+", "+n:n}})),a):a}},8713:e=>{"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}},4875:(e,t,n)=>{"use strict";var r=n(7288).version,o={};["object","boolean","number","function","string","symbol"].forEach((function(e,t){o[e]=function(n){return typeof n===e||"a"+(t<1?"n ":" ")+e}}));var i={};o.transitional=function(e,t,n){function o(e,t){return"[Axios v"+r+"] Transitional option '"+e+"'"+t+(n?". "+n:"")}return function(n,r,a){if(!1===e)throw new Error(o(r," has been removed"+(t?" in "+t:"")));return t&&!i[r]&&(i[r]=!0,console.warn(o(r," has been deprecated since v"+t+" and will be removed in the near future"))),!e||e(n,r,a)}},e.exports={assertOptions:function(e,t,n){if("object"!=typeof e)throw new TypeError("options must be an object");for(var r=Object.keys(e),o=r.length;o-- >0;){var i=r[o],a=t[i];if(a){var s=e[i],c=void 0===s||a(s,i,e);if(!0!==c)throw new TypeError("option "+i+" must be "+c)}else if(!0!==n)throw Error("Unknown option "+i)}},validators:o}},4867:(e,t,n)=>{"use strict";var r=n(1849),o=Object.prototype.toString;function i(e){return Array.isArray(e)}function a(e){return void 0===e}function s(e){return"[object ArrayBuffer]"===o.call(e)}function c(e){return null!==e&&"object"==typeof e}function u(e){if("[object Object]"!==o.call(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}function d(e){return"[object Function]"===o.call(e)}function l(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),i(e))for(var n=0,r=e.length;n<r;n++)t.call(null,e[n],n,e);else for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.call(null,e[o],o,e)}e.exports={isArray:i,isArrayBuffer:s,isBuffer:function(e){return null!==e&&!a(e)&&null!==e.constructor&&!a(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"[object FormData]"===o.call(e)},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&s(e.buffer)},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:c,isPlainObject:u,isUndefined:a,isDate:function(e){return"[object Date]"===o.call(e)},isFile:function(e){return"[object File]"===o.call(e)},isBlob:function(e){return"[object Blob]"===o.call(e)},isFunction:d,isStream:function(e){return c(e)&&d(e.pipe)},isURLSearchParams:function(e){return"[object URLSearchParams]"===o.call(e)},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:l,merge:function e(){var t={};function n(n,r){u(t[r])&&u(n)?t[r]=e(t[r],n):u(n)?t[r]=e({},n):i(n)?t[r]=n.slice():t[r]=n}for(var r=0,o=arguments.length;r<o;r++)l(arguments[r],n);return t},extend:function(e,t,n){return l(t,(function(t,o){e[o]=n&&"function"==typeof t?r(t,n):t})),e},trim:function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}}},1402:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});var r=n(7537),o=n.n(r),i=n(3645),a=n.n(i)()(o());a.push([e.id,"* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  /* width: 100vw;\r\n  height: 100vh; */\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  background-color: #000;\r\n  color: #fff;\r\n}\r\n\r\n.nav {\r\n  margin: 8px;\r\n}\r\n\r\n.btn {\r\n  height: 21px;\r\n  font-size: 0.6rem;\r\n  font-weight:bold;\r\n  text-transform: uppercase;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn:active {\r\n  opacity: 0.8;\r\n}\r\n\r\n.green-btn {\r\n  background: #e3f6b3;\r\n}\r\n\r\n.green-btn-no-hover {\r\n  background: #e3f6b3;\r\n}\r\n\r\n.green-btn:hover {\r\n  box-shadow: 0 0 20px #e3f6b3, 0 0 20px #e3f6b3, 0 0 20px #e3f6b3, 0 0 20px #e3f6b3;\r\n}\r\n\r\n.blue-btn-no-hover {\r\n  background: #d3e3fb;\r\n}\r\n\r\n.blue-btn {\r\n  background: #d3e3fb;\r\n}\r\n\r\n.blue-btn:hover {\r\n  box-shadow: 0 0 20px #d3e3fb, 0 0 20px #d3e3fb, 0 0 20px #d3e3fb, 0 0 20px #d3e3fb;\r\n}\r\n\r\n.nav-btn {\r\n  width: 85px;\r\n}\r\n\r\n.garage-page {\r\n  display: block;\r\n  width: 100%;\r\n}\r\n\r\n.settings,\r\n.winners {\r\n  margin-top: 30px;\r\n}\r\n\r\n.create-car,\r\n.update-car,\r\n.btn-container {\r\n  margin: 8px;\r\n}\r\n\r\n.input-text {\r\n  background: #e2ebf9;\r\n}\r\n\r\n.input-color {\r\n  height: 21px;\r\n  border-radius: 7px;\r\n}\r\n\r\n.settings-btn {\r\n  width: 65px;\r\n}\r\n\r\n.race-btn,\r\n.reset-btn {\r\n  width: 80px;\r\n}\r\n\r\n.generate-btn {\r\n  width: 130px;\r\n}\r\n\r\n.garage {\r\n  margin-top: 50px;\r\n}\r\n\r\nh1, h2, h3 {\r\n  padding: 0;\r\n  margin: 0;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.car-container {\r\n  padding: 5px 0;\r\n}\r\n\r\n.car-title {\r\n  display: flex;\r\n  column-gap: 5px;\r\n}\r\n\r\n.car-main {\r\n  width: 100%;\r\n  height: 37px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  column-gap: 5px;\r\n  margin-top: 5px;\r\n}\r\n\r\n.car-brand {\r\n  margin-left: 15px;\r\n  color: #e6d371;\r\n}\r\n\r\n.car-brand-update {\r\n  text-shadow: 1px 1px 2px #fc0, 0 0 25px #fc0, 0 0 5px #fc0;\r\n}\r\n\r\n.btn-start,\r\n.btn-stop {\r\n  width: 25px;\r\n  height: 25px;\r\n  vertical-align: top;\r\n  border: 2px solid #49484a;\r\n  border-radius: 7px;\r\n  background: #000;\r\n  color: #49484a;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn-start-active {\r\n  color: #e3f6b3;\r\n  border: 2px solid #e3f6b3;\r\n}\r\n\r\n.btn-stop-active {\r\n  color: #f03210;\r\n  border: 2px solid #f03210;\r\n}\r\n\r\n.distance {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0 20px;\r\n}\r\n\r\n.car {\r\n  width: 90px;\r\n  height: 25px;\r\n  position: absolute;\r\n  bottom: 1px;\r\n  left: 0;\r\n  filter: drop-shadow(0 0 3px #d3e3fb);\r\n}\r\n\r\n.car-winner {\r\n  width: 45px;\r\n  height: 12px;\r\n  filter: drop-shadow(0 0 3px #d3e3fb);\r\n}\r\n\r\n.flag {\r\n  position: absolute;\r\n  right: 95px;\r\n  width: 40px;\r\n  height: 35px;\r\n}\r\n\r\nhr {\r\n  margin: 0;\r\n  border-color: white;\r\n  border-style: dashed;\r\n}\r\n\r\n.prev-and-next {\r\n  margin-top: 25px;\r\n}\r\n\r\n.prev-btn,\r\n.next-btn {\r\n  width: 80px;\r\n}\r\n\r\n.winners-page {\r\n  display: block;\r\n  /* width: 100%; */\r\n  margin: 8px;\r\n}\r\n\r\nth,\r\ntr {\r\n  padding: 10px;\r\n}\r\n\r\nth:first-child {\r\n  text-align: left;\r\n}","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;EACE,sBAAsB;AACxB;;AAEA;EACE;kBACgB;EAChB,WAAW;EACX,YAAY;EACZ,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,WAAW;AACb;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,YAAY;EACZ,iBAAiB;EACjB,gBAAgB;EAChB,yBAAyB;EACzB,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,kFAAkF;AACpF;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,kFAAkF;AACpF;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,cAAc;EACd,WAAW;AACb;;AAEA;;EAEE,gBAAgB;AAClB;;AAEA;;;EAGE,WAAW;AACb;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,WAAW;AACb;;AAEA;;EAEE,WAAW;AACb;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,UAAU;EACV,SAAS;EACT,oBAAoB;AACtB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,iBAAiB;EACjB,cAAc;AAChB;;AAEA;EACE,0DAA0D;AAC5D;;AAEA;;EAEE,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,yBAAyB;EACzB,kBAAkB;EAClB,gBAAgB;EAChB,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,cAAc;EACd,yBAAyB;AAC3B;;AAEA;EACE,cAAc;EACd,yBAAyB;AAC3B;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,WAAW;EACX,OAAO;EACP,oCAAoC;AACtC;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,oCAAoC;AACtC;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,WAAW;EACX,YAAY;AACd;;AAEA;EACE,SAAS;EACT,mBAAmB;EACnB,oBAAoB;AACtB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;;EAEE,WAAW;AACb;;AAEA;EACE,cAAc;EACd,iBAAiB;EACjB,WAAW;AACb;;AAEA;;EAEE,aAAa;AACf;;AAEA;EACE,gBAAgB;AAClB",sourcesContent:["* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  /* width: 100vw;\r\n  height: 100vh; */\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n  background-color: #000;\r\n  color: #fff;\r\n}\r\n\r\n.nav {\r\n  margin: 8px;\r\n}\r\n\r\n.btn {\r\n  height: 21px;\r\n  font-size: 0.6rem;\r\n  font-weight:bold;\r\n  text-transform: uppercase;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn:active {\r\n  opacity: 0.8;\r\n}\r\n\r\n.green-btn {\r\n  background: #e3f6b3;\r\n}\r\n\r\n.green-btn-no-hover {\r\n  background: #e3f6b3;\r\n}\r\n\r\n.green-btn:hover {\r\n  box-shadow: 0 0 20px #e3f6b3, 0 0 20px #e3f6b3, 0 0 20px #e3f6b3, 0 0 20px #e3f6b3;\r\n}\r\n\r\n.blue-btn-no-hover {\r\n  background: #d3e3fb;\r\n}\r\n\r\n.blue-btn {\r\n  background: #d3e3fb;\r\n}\r\n\r\n.blue-btn:hover {\r\n  box-shadow: 0 0 20px #d3e3fb, 0 0 20px #d3e3fb, 0 0 20px #d3e3fb, 0 0 20px #d3e3fb;\r\n}\r\n\r\n.nav-btn {\r\n  width: 85px;\r\n}\r\n\r\n.garage-page {\r\n  display: block;\r\n  width: 100%;\r\n}\r\n\r\n.settings,\r\n.winners {\r\n  margin-top: 30px;\r\n}\r\n\r\n.create-car,\r\n.update-car,\r\n.btn-container {\r\n  margin: 8px;\r\n}\r\n\r\n.input-text {\r\n  background: #e2ebf9;\r\n}\r\n\r\n.input-color {\r\n  height: 21px;\r\n  border-radius: 7px;\r\n}\r\n\r\n.settings-btn {\r\n  width: 65px;\r\n}\r\n\r\n.race-btn,\r\n.reset-btn {\r\n  width: 80px;\r\n}\r\n\r\n.generate-btn {\r\n  width: 130px;\r\n}\r\n\r\n.garage {\r\n  margin-top: 50px;\r\n}\r\n\r\nh1, h2, h3 {\r\n  padding: 0;\r\n  margin: 0;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.car-container {\r\n  padding: 5px 0;\r\n}\r\n\r\n.car-title {\r\n  display: flex;\r\n  column-gap: 5px;\r\n}\r\n\r\n.car-main {\r\n  width: 100%;\r\n  height: 37px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  column-gap: 5px;\r\n  margin-top: 5px;\r\n}\r\n\r\n.car-brand {\r\n  margin-left: 15px;\r\n  color: #e6d371;\r\n}\r\n\r\n.car-brand-update {\r\n  text-shadow: 1px 1px 2px #fc0, 0 0 25px #fc0, 0 0 5px #fc0;\r\n}\r\n\r\n.btn-start,\r\n.btn-stop {\r\n  width: 25px;\r\n  height: 25px;\r\n  vertical-align: top;\r\n  border: 2px solid #49484a;\r\n  border-radius: 7px;\r\n  background: #000;\r\n  color: #49484a;\r\n  cursor: pointer;\r\n}\r\n\r\n.btn-start-active {\r\n  color: #e3f6b3;\r\n  border: 2px solid #e3f6b3;\r\n}\r\n\r\n.btn-stop-active {\r\n  color: #f03210;\r\n  border: 2px solid #f03210;\r\n}\r\n\r\n.distance {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0 20px;\r\n}\r\n\r\n.car {\r\n  width: 90px;\r\n  height: 25px;\r\n  position: absolute;\r\n  bottom: 1px;\r\n  left: 0;\r\n  filter: drop-shadow(0 0 3px #d3e3fb);\r\n}\r\n\r\n.car-winner {\r\n  width: 45px;\r\n  height: 12px;\r\n  filter: drop-shadow(0 0 3px #d3e3fb);\r\n}\r\n\r\n.flag {\r\n  position: absolute;\r\n  right: 95px;\r\n  width: 40px;\r\n  height: 35px;\r\n}\r\n\r\nhr {\r\n  margin: 0;\r\n  border-color: white;\r\n  border-style: dashed;\r\n}\r\n\r\n.prev-and-next {\r\n  margin-top: 25px;\r\n}\r\n\r\n.prev-btn,\r\n.next-btn {\r\n  width: 80px;\r\n}\r\n\r\n.winners-page {\r\n  display: block;\r\n  /* width: 100%; */\r\n  margin: 8px;\r\n}\r\n\r\nth,\r\ntr {\r\n  padding: 10px;\r\n}\r\n\r\nth:first-child {\r\n  text-align: left;\r\n}"],sourceRoot:""}]);const s=a},3645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var u=0;u<e.length;u++){var d=[].concat(e[u]);r&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),t.push(d))}},t}},7537:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(a).concat([i]).join("\n")}return[t].join("\n")}},6962:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>b});var r=n(3379),o=n.n(r),i=n(7795),a=n.n(i),s=n(569),c=n.n(s),u=n(3565),d=n.n(u),l=n(9216),p=n.n(l),f=n(4589),h=n.n(f),A=n(1402),v={};v.styleTagTransform=h(),v.setAttributes=d(),v.insert=c().bind(null,"head"),v.domAPI=a(),v.insertStyleElement=p(),o()(A.Z,v);const b=A.Z&&A.Z.locals?A.Z.locals:void 0},3379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},a=[],s=0;s<e.length;s++){var c=e[s],u=r.base?c[0]+r.base:c[0],d=i[u]||0,l="".concat(u," ").concat(d);i[u]=d+1;var p=n(l),f={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(f);else{var h=o(f,r);r.byIndex=s,t.splice(s,0,{identifier:l,updater:h,references:1})}a.push(l)}return a}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var s=n(i[a]);t[s].references--}for(var c=r(e,o),u=0;u<i.length;u++){var d=n(i[u]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}i=c}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},9216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},3565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},7795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},4589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},7043:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.brandsCars=void 0,t.brandsCars=["Audi","Alfa Romeo","Alpina","Aston Martin","Axon","Ford","Ferrari","Fiat","GAZ","GMC","Honda","Hummer","Hyundai","Infiniti","Isuzu","JAC","Jaguar","Jeep","Kamaz","Lada","Lexus","Lotus","MAN","Maybach","MAZ","Mazda","McLaren","Nissan","Opel","Paccar","Pagani","Pontiac","Porsche","Renault","Škoda","Smart","Subaru","Suzuki","Tesla","Toyota","UAZ","Volvo","ZAZ","XPeng","TVR","Saab","RAM","Chevrolet","Mazzanti","Daewoo"]},5653:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(e){this.container=document.createElement("div"),this.container.id=e,this.container.className=e}createPage(e){this.container.innerHTML=e}render(){return this.container}}},4293:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.returnAllCars=t.returnCar=t.startAllCars=t.startCar=void 0;const o=n(3994),i=(e,t,n)=>r(void 0,void 0,void 0,(function*(){let r=Date.now(),o=setInterval((function(){let i=Date.now()-r;i>=t?clearInterval(o):function(e,r){e.style.left=r/(t/n)+"px"}(e,i)}),20)}));t.startCar=e=>r(void 0,void 0,void 0,(function*(){const t=new RegExp(/\d/gm),n=e.id.match(t).join(""),r=document.querySelector(`#car-${n}`),a=document.querySelector(`#btn-start-${n}`),s=document.querySelector(`#btn-stop-${n}`);let c=yield(0,o.startStopCarsEngine)(+n,"started");console.log(c);let u=c[1].distance/c[1].velocity,d=document.querySelector(".distance").offsetWidth-90;a.classList.remove("btn-start-active"),a.setAttribute("disabled",""),s.classList.add("btn-stop-active"),yield i(r,u,d),a.removeAttribute("disabled");let l=yield(0,o.startStopCarsEngine)(+n,"drive");console.log(l)})),t.startAllCars=()=>r(void 0,void 0,void 0,(function*(){const e=document.querySelectorAll(".car"),t=document.querySelector(".reset-btn");t.classList.remove("green-btn"),t.setAttribute("disabled","");const n=[],a=Array.from(e).map((e=>r(void 0,void 0,void 0,(function*(){const t=new RegExp(/\d/gm),r=e.id.match(t).join(""),a=document.querySelector(`#btn-start-${r}`),s=document.querySelector(`#btn-stop-${r}`);let c=yield(0,o.startStopCarsEngine)(+r,"started"),u=c[1].distance/c[1].velocity;n.push([+r,u]);let d=document.querySelector(".distance").offsetWidth-90;return a.classList.remove("btn-start-active"),s.classList.add("btn-stop-active"),[yield i(e,u,d),yield(0,o.startStopCarsEngine)(+r,"drive")]}))));return yield Promise.all(a),t.removeAttribute("disabled"),t.classList.add("green-btn"),n})),t.returnCar=e=>r(void 0,void 0,void 0,(function*(){const t=new RegExp(/\d/gm),n=e.id.match(t).join(""),r=document.querySelector(`#car-${n}`),o=document.querySelector(`#btn-start-${n}`),i=document.querySelector(`#btn-stop-${n}`);o.classList.add("btn-start-active"),i.classList.remove("btn-stop-active"),r.style.left="0px"})),t.returnAllCars=()=>r(void 0,void 0,void 0,(function*(){const e=document.querySelectorAll(".car"),t=Array.from(e).map((e=>r(void 0,void 0,void 0,(function*(){const t=new RegExp(/\d/gm),n=e.id.match(t).join(""),r=document.querySelector(`#btn-start-${n}`),o=document.querySelector(`#btn-stop-${n}`);r.classList.add("btn-start-active"),o.classList.remove("btn-stop-active"),e.style.left="0px"}))));yield Promise.all(t)}))},2953:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.callApi=void 0;const o=n(9669);t.callApi=(e,t,n)=>r(void 0,void 0,void 0,(function*(){return yield(0,o.default)({method:e,url:`https://rocky-badlands-93860.herokuapp.com${t}`,data:n,headers:{"Content-Type":"application/json"}})}))},7263:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.addCar=t.createCar=void 0;const o=n(2953),i=n(4400),a=n(657),s=(e,t)=>r(void 0,void 0,void 0,(function*(){try{const n="POST",r="/garage",i={name:e,color:t};return yield(0,o.callApi)(n,r,i)}catch(e){return void console.log(e)}}));t.createCar=s,t.addCar=()=>r(void 0,void 0,void 0,(function*(){const e=document.querySelector(".input-create-color"),t=document.querySelector(".input-create-text"),n=document.querySelector(".next-btn-garage"),o=document.querySelector(".garage-title").textContent.match(new RegExp(/\d*/gm)).join(""),c=document.querySelector(".garage-page-title").textContent.match(new RegExp(/# \d*/gm)).join("").slice(2);document.querySelector(".create-btn").addEventListener("click",(()=>r(void 0,void 0,void 0,(function*(){yield s(t.value,e.value),yield(0,i.renderPage)(+c),yield(0,a.setBtnAtrubute)("garage"),yield(0,a.flipPage)("garage"),t.value="",+o%7==0&&(n.removeAttribute("disabled"),n.classList.add("blue-btn"))}))))}))},271:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))},o=this&&this.__asyncValues||function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,n=e[Symbol.asyncIterator];return n?n.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(n){t[n]=e[n]&&function(t){return new Promise((function(r,o){!function(e,t,n,r){Promise.resolve(r).then((function(t){e({value:t,done:n})}),t)}(r,o,(t=e[n](t)).done,t.value)}))}}};Object.defineProperty(t,"__esModule",{value:!0}),t.addRandomCar=void 0;const i=n(7263),a=n(8621),s=n(7043),c=n(4400),u=n(657);t.addRandomCar=()=>r(void 0,void 0,void 0,(function*(){var e,t;const n=document.querySelector(".next-btn-garage"),r=document.querySelector(".garage-page-title").textContent.match(new RegExp(/# \d*/gm)).join("").slice(2),d=(()=>{const e=Array(100).fill("").map((()=>{return e=s.brandsCars,t=a.modelsCars,`${e[Math.floor(Math.random()*e.length)]}-${t[Math.floor(Math.random()*t.length)]}`;var e,t})),t=Array(100).fill("").map((()=>"#"+(Math.random().toString(16)+"000000").substring(2,8)));return e.map(((e,n)=>[e,t[n]]))})();try{for(var l,p=o(d);!(l=yield p.next()).done;){const e=l.value;(0,i.createCar)(e[0],e[1])}}catch(t){e={error:t}}finally{try{l&&!l.done&&(t=p.return)&&(yield t.call(p))}finally{if(e)throw e.error}}yield(0,c.renderPage)(+r),yield(0,u.setBtnAtrubute)("garage"),yield(0,u.flipPage)("garage"),n.removeAttribute("disabled"),n.classList.add("blue-btn")}))},5799:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.createWinner=void 0;const o=n(2953);t.createWinner=(e,t,n)=>r(void 0,void 0,void 0,(function*(){try{const r="POST",i="/winners",a={id:e,wins:t,time:n};return yield(0,o.callApi)(r,i,a)}catch(e){return void console.log(e)}}))},1042:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.delCar=void 0;const o=n(2953),i=n(4400),a=n(657),s=e=>r(void 0,void 0,void 0,(function*(){try{const t="DELETE",n=`/garage/${e}`;return(yield(0,o.callApi)(t,n)).data}catch(e){console.log(e)}}));t.delCar=e=>r(void 0,void 0,void 0,(function*(){const t=document.querySelector(".garage-title").textContent.match(new RegExp(/\d*/gm)).join(""),n=document.querySelector(".garage-page-title").textContent,r=n.match(new RegExp(/# \d*/gm)).join("").slice(2),o=n.match(new RegExp(/\d*$/gm)).join(""),c=new RegExp(/\d/gm),u=e.id.match(c).join("");(+t-1)%7==0&&+o==+r?(yield s(+u),yield(0,i.renderPage)(+r-1),yield(0,a.setBtnAtrubute)("garage"),yield(0,a.flipPage)("garage")):(yield s(+u),yield(0,i.renderPage)(+r),yield(0,a.setBtnAtrubute)("garage"),yield(0,a.flipPage)("garage"))}))},8600:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.deleteWinner=void 0;const o=n(2953);t.deleteWinner=e=>r(void 0,void 0,void 0,(function*(){try{const t="DELETE",n=`/winners/${e}`;return(yield(0,o.callApi)(t,n)).data}catch(e){console.log(e)}}))},6508:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.getCar=void 0;const o=n(2953);t.getCar=e=>r(void 0,void 0,void 0,(function*(){try{const t="GET",n=`/garage/${e}`;return(yield(0,o.callApi)(t,n)).data}catch(e){console.log(e)}}))},34:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.returnCarContent=void 0;const o=n(2953),i=n(362);t.returnCarContent=e=>r(void 0,void 0,void 0,(function*(){const t=yield((e,t=7)=>r(void 0,void 0,void 0,(function*(){try{const n="GET",r=`/garage?_page=${e}&_limit=${t}`,i=yield(0,o.callApi)(n,r);return[i.data,+i.headers["x-total-count"]]}catch(e){return console.log(e),[null,0]}})))(e);return null===t[0]?["",t[1],e]:[(yield(n=t[0],r(void 0,void 0,void 0,(function*(){return null===n?[""]:n.map((e=>(0,i.createCarContent)(`${e.id}`,`${e.color}`,`${e.name}`)))})))).join("\n"),t[1],e];var n}))},3232:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.getWinner=void 0;const o=n(2953);t.getWinner=e=>r(void 0,void 0,void 0,(function*(){try{const t="GET",n=`/winners/${e}`;return(yield(0,o.callApi)(t,n)).data}catch(e){console.log(e)}}))},2512:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.returnWinnerContent=void 0;const o=n(2953),i=n(9658),a=n(6508);t.returnWinnerContent=e=>r(void 0,void 0,void 0,(function*(){const t=yield((e,t=10)=>r(void 0,void 0,void 0,(function*(){try{const n="GET",r=`/winners?_page=${e}&_limit=${t}`,i=yield(0,o.callApi)(n,r),a=i.data,s=+i.headers["x-total-count"];return console.log([a,s]),[a,s]}catch(e){return console.log(e),[null,0]}})))(e);var n;return[(yield(n=t[0],r(void 0,void 0,void 0,(function*(){if(null===n)return[""];const e=yield n.map((e=>e.id));yield Promise.all(e);const t=yield e.map((e=>(0,a.getCar)(e))),r=yield Promise.all(t);return n.map(((e,t)=>(0,i.winnerRow)(`${e.id}`,`${e.time}`,`${e.wins}`,`${r[t].color}`,`${r[t].name}`,+`${t+1}`)))})))).join("\n"),t[1],e]}))},657:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.flipPage=t.setBtnAtrubute=void 0;const o=n(4400);let i=null==localStorage.getItem("garagePage")?1:+localStorage.getItem("garagePage");const a=e=>r(void 0,void 0,void 0,(function*(){const t=document.querySelector(`.next-btn-${e}`),n=document.querySelector(`.prev-btn-${e}`),r=document.querySelector(`.${e}-page-title`).textContent.match(new RegExp(/# \d*/gm)).join("").slice(2);+document.querySelector(`.${e}-title`).textContent.match(new RegExp(/\d*/gm)).join("")/7>+r?(t.removeAttribute("disabled"),t.classList.add("blue-btn")):(t.setAttribute("disabled",""),t.classList.remove("blue-btn")),1!=+r?(n.removeAttribute("disabled"),n.classList.add("blue-btn")):(n.setAttribute("disabled",""),n.classList.remove("blue-btn"))}));t.setBtnAtrubute=a;const s=e=>r(void 0,void 0,void 0,(function*(){const t=document.querySelector(`.next-btn-${e}`),n=document.querySelector(`.prev-btn-${e}`),c=document.querySelector(`.${e}-page-title`).textContent.match(new RegExp(/\d*$/gm)).join("");yield a(e),t.addEventListener("click",(()=>r(void 0,void 0,void 0,(function*(){i+=1,localStorage.setItem("garagePage",`${i}`),yield(0,o.renderPage)(i),yield s(e),i===+c&&(t.classList.remove("blue-btn"),t.setAttribute("disabled",""))})))),n.addEventListener("click",(()=>r(void 0,void 0,void 0,(function*(){i-=1,localStorage.setItem("garagePage",`${i}`),yield(0,o.renderPage)(i),yield s(e),i>=1&&(t.classList.add("blue-btn"),t.removeAttribute("disabled")),1===i&&(n.classList.remove("blue-btn"),n.setAttribute("disabled",""))}))))}));t.flipPage=s},4400:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.renderPage=void 0;const o=n(34),i=n(6928);t.renderPage=e=>r(void 0,void 0,void 0,(function*(){yield(0,o.returnCarContent)(e).then((e=>{var t;t=(0,i.garageContent)(e[0],`${e[1]}`,e[2]),r(void 0,void 0,void 0,(function*(){document.querySelector(".pages").innerHTML=t}))}))}))},3994:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.startStopCarsEngine=void 0;const o=n(2953);t.startStopCarsEngine=(e,t)=>r(void 0,void 0,void 0,(function*(){try{const n="PATCH",r=`/engine?id=${e}&status=${t}`,i=yield(0,o.callApi)(n,r);return[i,i.data]}catch(e){return void console.log(e)}}))},3853:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.updCar=void 0;const o=n(2953),i=n(4400),a=n(657);t.updCar=e=>r(void 0,void 0,void 0,(function*(){const t=document.querySelector(".input-update-color"),n=document.querySelector(".input-update-text"),s=document.querySelector(".update-btn"),c=document.querySelector(".garage-page-title").textContent.match(new RegExp(/# \d*/gm)).join("").slice(2),u=new RegExp(/\d/gm),d=e.id.match(u).join(""),l=document.querySelector(`#car-brand-${d}`);n.removeAttribute("disabled"),t.removeAttribute("disabled"),s.removeAttribute("disabled"),s.classList.add("blue-btn"),l.classList.add("car-brand-update"),s.addEventListener("click",(()=>r(void 0,void 0,void 0,(function*(){var e,u,p;yield(e=+d,u=n.value,p=t.value,r(void 0,void 0,void 0,(function*(){try{const t="PUT",n=`/garage/${e}`,r={name:u,color:p};return(yield(0,o.callApi)(t,n,r)).data}catch(e){console.log(e)}}))),t.setAttribute("disabled",""),s.setAttribute("disabled",""),n.setAttribute("disabled",""),s.classList.remove("blue-btn"),l.classList.remove("car-brand-update"),yield(0,i.renderPage)(+c),yield(0,a.setBtnAtrubute)("garage"),yield(0,a.flipPage)("garage")}))))}))},8252:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.updateWinner=void 0;const o=n(2953);t.updateWinner=(e,t,n)=>r(void 0,void 0,void 0,(function*(){try{const r="PUT",i=`/winners/${e}`,a={wins:t,time:n};return(yield(0,o.callApi)(r,i,a)).data}catch(e){console.log(e)}}))},186:function(e,t,n){"use strict";var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function s(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,s)}c((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const o=n(7356),i=n(2443),a=n(7263),s=n(1042),c=n(3853),u=n(271),d=n(4293);class l{static renderNewPage(e){l.container.innerHTML="";let t=null;if("garage-page"===e?t=new o.default(e):"winners-page"===e&&(t=new i.default(e)),t){const e=t.render();l.container.append(e)}}enableRouteChange(){window.addEventListener("hashchange",(()=>{const e=window.location.hash.slice(1);l.renderNewPage(e)}))}addEvents(){window.addEventListener("click",(e=>r(this,void 0,void 0,(function*(){const t=e.target;t.className.includes("input-create-text")?(0,a.addCar)():t.className.includes("remove-btn")?(0,s.delCar)(t):t.className.includes("select-btn")?(0,c.updCar)(t):t.className.includes("generate-btn")?(0,u.addRandomCar)():t.className.includes("btn-start")?(0,d.startCar)(t):t.className.includes("race-btn")?(0,d.startAllCars)():t.className.includes("btn-stop")?(0,d.returnCar)(t):t.className.includes("reset-btn")&&(0,d.returnAllCars)()}))))}run(){l.renderNewPage("garage-page"),this.enableRouteChange(),this.addEvents()}}l.container=document.querySelector(".pages"),t.default=l},362:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createCarContent=void 0,t.createCarContent=(e,t,n)=>`\n          <div class="car-container">\n            <div class="car-title">\n              <button id="select-btn-${e}" class="btn settings-btn blue-btn select-btn">Select</button>\n              <button id="remove-btn-${e}" class="btn settings-btn blue-btn remove-btn">Remove</button>\n              <div id="car-brand-${e}" class="car-brand">${n}</div>\n            </div>\n    \n            <div id="car-main-${e}" class="car-main">\n              <button id="btn-start-${e}" class="btn-start btn-start-active">A</button>\n              <button id="btn-stop-${e}" class="btn-stop">B</button>\n              <div class="distance">\n                <svg id="car-${e}" class="car" version="1.0" xmlns="http://www.w3.org/2000/svg" width="90.000000pt" height="25.000000pt" viewBox="0 0 1280.000000 365.000000" preserveAspectRatio="xMidYMid meet"><g transform="translate(0.000000,365.000000) scale(0.100000,-0.100000)" fill="${t}"><path d="M4860 3643 c-239 -18 -575 -71 -841 -133 -270 -62 -441 -114 -712 -216 -489 -184 -907 -313 -1152 -354 -66 -11 -271 -38 -455 -60 -476 -58 -675 -85 -919 -126 -506 -84 -796 -193 -779 -294 2 -11 101 -136 220 -278 l216 -259 -45 -44 c-131 -127 -234 -299 -275 -461 -22 -86 -22 -88 -5 -188 42 -252 156 -412 379 -534 106 -59 201 -87 308 -93 116 -6 168 6 221 54 48 43 69 107 69 207 0 307 60 636 159 877 190 459 541 758 982 835 136 23 358 15 495 -20 529 -132 929 -564 1074 -1158 51 -209 64 -327 63 -590 l0 -238 2624 0 c1442 0 2623 2 2623 5 0 2 -9 27 -20 56 -32 80 -87 284 -106 394 -24 139 -25 391 0 503 96 447 409 761 880 882 504 129 1049 3 1394 -323 336 -318 441 -780 303 -1326 l-27 -106 25 -21 c102 -83 243 -84 408 0 242 121 500 412 711 801 96 177 128 253 115 274 -14 23 -185 173 -265 233 -61 46 -67 53 -61 79 8 44 -40 134 -112 205 -106 107 -366 221 -694 304 -450 115 -954 165 -1661 165 -568 -1 -912 -24 -1309 -89 l-142 -23 -70 43 c-302 187 -707 389 -1079 539 -670 271 -1275 428 -1835 475 -109 9 -597 11 -705 3z m815 -233 c495 -36 862 -139 1323 -372 410 -208 670 -382 897 -601 l90 -86 -1240 0 c-1339 -1 -1312 -2 -1428 52 -75 35 -166 107 -227 181 -51 60 -63 86 -202 448 -81 210 -148 384 -148 386 0 7 817 0 935 -8z m-1249 -45 c29 -19 157 -276 204 -410 51 -148 100 -345 100 -407 0 -46 -5 -62 -24 -85 -23 -27 -28 -28 -113 -27 -64 0 -105 6 -149 22 -68 24 -695 396 -752 446 -61 53 -92 104 -92 150 0 131 165 219 565 302 167 35 219 37 261 9z"/><path fill="#dfdec9" d="M2276 2230 c-290 -46 -553 -203 -727 -433 -74 -98 -160 -271 -189 -382 -137 -525 103 -1061 585 -1302 176 -89 323 -118 547 -110 122 4 172 11 247 31 597 166 947 774 790 1374 -82 313 -297 572 -594 718 -157 77 -272 105 -455 109 -80 2 -172 0 -204 -5z m293 -615 c92 -24 163 -65 234 -136 186 -186 206 -461 48 -669 -85 -111 -203 -180 -345 -201 -247 -37 -501 141 -561 392 -42 179 6 343 139 474 111 110 211 153 356 154 41 1 99 -6 129 -14z"/><path fill="#dfdec9" d="M10175 2234 c-149 -22 -309 -76 -425 -144 -625 -365 -747 -1221 -249 -1745 131 -138 285 -235 467 -294 129 -43 230 -55 401 -48 175 6 284 33 436 106 321 154 546 451 616 811 19 98 16 319 -5 420 -92 435 -410 765 -840 871 -79 20 -328 34 -401 23z m270 -619 c88 -23 153 -62 230 -140 82 -81 120 -152 143 -266 50 -243 -102 -497 -348 -580 -83 -28 -210 -30 -295 -5 -232 68 -391 296 -372 531 12 136 65 244 166 337 102 95 205 136 341 137 42 1 102 -6 135 -14z"/></g></svg>\n                <img class="flag" src="./assets/flag.svg" alt="">\n              </div>\n            </div>\n            <hr>\n          </div>`},6928:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.garageContent=void 0;const r=n(7043).brandsCars.map((e=>`<option value="${e}">\n  `)).join("");t.garageContent=(e="",t="0",n=1)=>{let o=Math.ceil(+t/7);return`\n    <div class="settings">\n      <div class="create-car">\n        <input class="input-text input-create-text" type="text" list="create-models" placeholder="Choose a model">\n        <datalist id="create-models">\n          ${r}\n        </datalist>\n        <input class="input-color input-create-color" type="color">\n        <button class="btn settings-btn blue-btn create-btn">Create</button>\n      </div>\n      <div class="update-car">\n        <input class="input-text input-update-text" type="text" list="update-models" disabled>\n        <datalist id="update-models">\n          ${r}\n        </datalist>\n        <input class="input-color input-update-color" type="color" disabled>\n        <button class="btn settings-btn blue-btn-no-hover update-btn" disabled>Update</button>\n      </div>\n      <div class="btn-container">\n        <button class="btn race-btn green-btn green-btn-no-hover">Race</button>\n        <button class="btn reset-btn green-btn green-btn-no-hover">Reset</button>\n        <button class="btn generate-btn blue-btn">Generate Cars</button>\n      </div>\n    </div>\n    <div class="garage">\n      <h1 class="page-title garage-title">Garage ( <span>${t}</span> )</h1>\n      <h3 class="garage-page-title">Page # <span>${n} of ${o}</span></h3>\n      <div class="cars-container">\n        ${e}\n      </div>\n    </div>\n    <div class="prev-and-next">\n      <button class="btn prev-btn prev-btn-garage blue-btn-no-hover" disabled>Prev</button>\n      <button class="btn next-btn next-btn-garage blue-btn-no-hover" disabled>Next</button>\n    </div>`}},7356:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(5653),o=n(6928),i=n(34),a=n(657);class s extends r.default{constructor(e){super(e)}render(){this.createPage((0,o.garageContent)());let e=null==localStorage.getItem("garagePage")?1:+localStorage.getItem("garagePage");return(0,i.returnCarContent)(e).then((e=>{this.createPage((0,o.garageContent)(e[0],`${e[1]}`,e[2]))})).then((()=>{(0,a.flipPage)("garage")})),this.container}}t.default=s},9658:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.winnerRow=void 0,t.winnerRow=(e,t,n,r,o,i)=>`\n  <tr id="tr-${e}">\n   <th>${i}</th>\n   <th>\n     <div>\n       <svg id="car-winner-${e}" class="car-winner" version="1.0" xmlns="http://www.w3.org/2000/svg" width="45.000000pt" height="10.000000pt" viewBox="0 0 1280.000000 365.000000" preserveAspectRatio="xMidYMid meet"><g transform="translate(0.000000,365.000000) scale(0.100000,-0.100000)" fill="${r}"><path d="M4860 3643 c-239 -18 -575 -71 -841 -133 -270 -62 -441 -114 -712 -216 -489 -184 -907 -313 -1152 -354 -66 -11 -271 -38 -455 -60 -476 -58 -675 -85 -919 -126 -506 -84 -796 -193 -779 -294 2 -11 101 -136 220 -278 l216 -259 -45 -44 c-131 -127 -234 -299 -275 -461 -22 -86 -22 -88 -5 -188 42 -252 156 -412 379 -534 106 -59 201 -87 308 -93 116 -6 168 6 221 54 48 43 69 107 69 207 0 307 60 636 159 877 190 459 541 758 982 835 136 23 358 15 495 -20 529 -132 929 -564 1074 -1158 51 -209 64 -327 63 -590 l0 -238 2624 0 c1442 0 2623 2 2623 5 0 2 -9 27 -20 56 -32 80 -87 284 -106 394 -24 139 -25 391 0 503 96 447 409 761 880 882 504 129 1049 3 1394 -323 336 -318 441 -780 303 -1326 l-27 -106 25 -21 c102 -83 243 -84 408 0 242 121 500 412 711 801 96 177 128 253 115 274 -14 23 -185 173 -265 233 -61 46 -67 53 -61 79 8 44 -40 134 -112 205 -106 107 -366 221 -694 304 -450 115 -954 165 -1661 165 -568 -1 -912 -24 -1309 -89 l-142 -23 -70 43 c-302 187 -707 389 -1079 539 -670 271 -1275 428 -1835 475 -109 9 -597 11 -705 3z m815 -233 c495 -36 862 -139 1323 -372 410 -208 670 -382 897 -601 l90 -86 -1240 0 c-1339 -1 -1312 -2 -1428 52 -75 35 -166 107 -227 181 -51 60 -63 86 -202 448 -81 210 -148 384 -148 386 0 7 817 0 935 -8z m-1249 -45 c29 -19 157 -276 204 -410 51 -148 100 -345 100 -407 0 -46 -5 -62 -24 -85 -23 -27 -28 -28 -113 -27 -64 0 -105 6 -149 22 -68 24 -695 396 -752 446 -61 53 -92 104 -92 150 0 131 165 219 565 302 167 35 219 37 261 9z"/><path fill="#dfdec9" d="M2276 2230 c-290 -46 -553 -203 -727 -433 -74 -98 -160 -271 -189 -382 -137 -525 103 -1061 585 -1302 176 -89 323 -118 547 -110 122 4 172 11 247 31 597 166 947 774 790 1374 -82 313 -297 572 -594 718 -157 77 -272 105 -455 109 -80 2 -172 0 -204 -5z m293 -615 c92 -24 163 -65 234 -136 186 -186 206 -461 48 -669 -85 -111 -203 -180 -345 -201 -247 -37 -501 141 -561 392 -42 179 6 343 139 474 111 110 211 153 356 154 41 1 99 -6 129 -14z"/><path fill="#dfdec9" d="M10175 2234 c-149 -22 -309 -76 -425 -144 -625 -365 -747 -1221 -249 -1745 131 -138 285 -235 467 -294 129 -43 230 -55 401 -48 175 6 284 33 436 106 321 154 546 451 616 811 19 98 16 319 -5 420 -92 435 -410 765 -840 871 -79 20 -328 34 -401 23z m270 -619 c88 -23 153 -62 230 -140 82 -81 120 -152 143 -266 50 -243 -102 -497 -348 -580 -83 -28 -210 -30 -295 -5 -232 68 -391 296 -372 531 12 136 65 244 166 337 102 95 205 136 341 137 42 1 102 -6 135 -14z"/></g></svg>\n     </div>\n   </th>\n   <th>${o}</th>\n   <th>${n}</th>\n   <th>${t}</th>\n </tr>`},5954:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.winnersContent=void 0,t.winnersContent=(e="",t="0",n=1)=>`\n  <div class="winners">\n    <h1 class="page-title winners-title">Winners ( <span>${t}</span> )</h1>\n    <h3 class="winners-page-title">Page # <span>${n} of ${Math.ceil(+t/7)}</span></h3>\n  </div>\n\n  <div class="winners-container">\n    <table>\n      <thead>\n        <tr>\n          <th>Number</th>\n          <th>Car</th>\n          <th>Name</th>\n          <th>Wins</th>\n          <th>Best time (second)</th>\n        </tr>\n       </thead>\n       <tbody>\n        ${e}\n       </tbody>\n    </table>\n  </div>\n  <div class="prev-and-next">\n    <button class="btn prev-btn prev-btn-winners blue-btn-no-hover" disabled>Prev</button>\n    <button class="btn next-btn next-btn-winners blue-btn-no-hover" disabled>Next</button>\n  </div>`},2443:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const r=n(5653),o=n(5954),i=n(2512),a=n(657);class s extends r.default{constructor(e){super(e)}render(){return this.createPage((0,o.winnersContent)()),(0,i.returnWinnerContent)(1).then((e=>{this.createPage((0,o.winnersContent)(e[0],e[1],e[2]))})).then((()=>{(0,a.flipPage)("winners")})),this.container}}t.default=s},8621:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.modelsCars=void 0,t.modelsCars=["Roadster","S","X","3","Y","Cybertruck","X5","X7","X3","X6","GT4","FXX","599 GTO","Enzo","458 Italia","250 GTO","Priora","4x4","Rio","Focus","Kalina","Vesta","Spark","Lacetti","Nexia","Matiz","Cobalt","Captiva","A7","A5","A3","A8","TT","Corolla","Camry","RAV4","Impreza","WRX","ES","LS","RX","GX","LX","GS","LC500","Gallardo","Aventador","911","Cayenne","FX37"]}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{"use strict";n(6962),n(2953),n(4400),n(34),n(6508),n(7263),n(271),n(1042),n(3853),n(2512),n(3232),n(5799),n(8600),n(8252),n(3994),n(4293),(new(n(186).default)).run()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,